% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_write_csv}
\alias{DataFrame_write_csv}
\title{Write to comma-separated values (CSV) file}
\usage{
DataFrame_write_csv(
  path,
  include_bom = FALSE,
  include_header = TRUE,
  separator = ",",
  line_terminator = "\\n",
  quote = "\\"",
  batch_size = 1024,
  datetime_format = NULL,
  date_format = NULL,
  time_format = NULL,
  float_precision = NULL,
  null_values = "",
  quote_style = "necessary"
)
}
\arguments{
\item{path}{File path to which the result should be written.}

\item{include_bom}{Whether to include UTF-8 BOM (byte order mark) in the CSV
output.}

\item{include_header}{Whether to include header in the CSV output.}

\item{separator}{Separate CSV fields with this symbol.}

\item{line_terminator}{String used to end each row.}

\item{quote}{Byte to use as quoting character.}

\item{batch_size}{Number of rows that will be processed per thread.}

\item{datetime_format}{A format string, with the specifiers defined by the
chrono Rust crate. If no format specified, the default fractional-second
precision is inferred from the maximum timeunit found in the frameâ€™s Datetime
cols (if any).}

\item{date_format}{A format string, with the specifiers defined by the chrono
Rust crate.}

\item{time_format}{A format string, with the specifiers defined by the chrono
Rust crate.}

\item{float_precision}{Number of decimal places to write, applied to both
Float32 and Float64 datatypes.}

\item{null_values}{A string representing null values (defaulting to the empty
string).}

\item{quote_style}{Determines the quoting strategy used.
\itemize{
\item \code{"necessary"} (default): This puts quotes around fields only when necessary.
They are necessary when fields contain a quote, delimiter or record
terminator. Quotes are also necessary when writing an empty record (which
is indistinguishable from a record with one empty field). This is the
default.
\item \code{"always"}: This puts quotes around every field.
\item \code{"non_numeric"}: This puts quotes around all fields that are non-numeric.
Namely, when writing a field that does not parse as a valid float or integer,
then quotes will be used even if they aren`t strictly necessary.
\item \code{"never"}: This never puts quotes around fields, even if that results in
invalid CSV data (e.g. by not quoting strings containing the separator).
}}
}
\value{
This doesn't return anything but creates a CSV file.
}
\description{
Write to comma-separated values (CSV) file
}
\examples{
dat = pl$DataFrame(mtcars)

destination = tempfile(fileext = ".csv")
dat$select(pl$col("drat", "mpg"))$write_csv(destination)

pl$read_csv(destination)
}
