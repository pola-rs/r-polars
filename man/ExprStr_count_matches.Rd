% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__string.R
\name{ExprStr_count_matches}
\alias{ExprStr_count_matches}
\title{Count all successive non-overlapping regex matches}
\usage{
ExprStr_count_matches(pattern, ..., literal = FALSE)
}
\arguments{
\item{pattern}{A character or something can be coerced to a string \link[=Expr_class]{Expr}
of a valid regex pattern, compatible with the \href{https://docs.rs/regex/latest/regex/}{regex crate}.}

\item{...}{Ignored.}

\item{literal}{Logical. If \code{TRUE} (default), treat \code{pattern} as a literal string,
not as a regular expression.}
}
\value{
\link[=Expr_class]{Expr} of data type \code{UInt32}.
Returns \code{null} if the original value is \code{null}.
}
\description{
Count all successive non-overlapping regex matches
}
\examples{
df = pl$DataFrame(foo = c("12 dbc 3xy", "cat\\\\w", "1zy3\\\\d\\\\d", NA))

df$with_columns(
  count_digits = pl$col("foo")$str$count_matches(r"(\d)"),
  count_slash_d = pl$col("foo")$str$count_matches(r"(\d)", literal = TRUE)
)
}
