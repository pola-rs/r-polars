% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-lazy.R
\name{pl__collect_all}
\alias{pl__collect_all}
\title{Collect multiple LazyFrames at the same time}
\usage{
pl__collect_all(lazy_frames, ..., engine = c("auto", "in-memory", "streaming"))
}
\arguments{
\item{lazy_frames}{A list of LazyFrames to collect.}

\item{...}{These dots are for future extensions and must be empty.}

\item{engine}{The engine name to use for processing the query.
One of the followings:
\itemize{
\item \code{"auto"} (default): Select the engine automatically.
The \code{"in-memory"} engine will be selected for most cases.
\item \code{"in-memory"}: Use the in-memory engine.
\item \code{"streaming"}: \ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} Use the (new) streaming engine.
}}
}
\value{
A list containing all the collected DataFrames, in the same order
as the input LazyFrames.
}
\description{
This can run all the computation graphs in parallel or combined. Common
Subplan Elimination is applied on the combined plan, meaning that diverging
queries will run only once.
}
\examples{
lf <- as_polars_lf(mtcars)$with_columns(sqrt_mpg = pl$col("mpg")$sqrt())

cyl_4 <- lf$filter(pl$col("cyl") == 4)
cyl_6 <- lf$filter(pl$col("cyl") == 6)

# We could do `cyl_4$collect()` and `cyl_6$collect()`, but this would be
# wasteful because `sqrt_mpg` would be computed twice.
# `pl$collect_all()` executes only once the parts of the query that are
# identical across LazyFrames.
pl$collect_all(list(cyl_4, cyl_6))
}
