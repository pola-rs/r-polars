% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__string.R
\name{ExprStr_strptime}
\alias{ExprStr_strptime}
\title{Convert a Utf8 column into a Date/Datetime/Time column.}
\arguments{
\item{datatype}{The data type to convert into. Can be either Date, Datetime,
or Time.}

\item{format}{Format to use for conversion. See \code{?strptime} for possible
values. Example: "\%Y-\%m-\%d \%H:\%M:\%S". If \code{NULL} (default), the format is
inferred from the data. Notice that time zone \verb{\%Z} is not supported and will
just ignore timezones. Numeric time zones like \verb{\%z} or \verb{\%:z}  are supported.}

\item{strict}{If \code{TRUE} (default), raise an error if a single string cannot
be parsed. Otherwise, produce a polars \code{null}.}

\item{exact}{If \code{TRUE} (default), require an exact format match. Otherwise,
allow the format to match anywhere in the target string.}

\item{cache}{Use a cache of unique, converted dates to apply the datetime
conversion.}

\item{ambiguous}{Determine how to deal with ambiguous datetimes:
\itemize{
\item \code{"raise"} (default): raise
\item \code{"earliest"}: use the earliest datetime
\item \code{"latest"}: use the latest datetime
}}
}
\value{
Expr of a Date, Datetime or Time Series
}
\description{
Convert a Utf8 column into a Date/Datetime/Time column.
}
\details{
When parsing a Datetime the column precision will be inferred from the format
string, if given, eg: â€œ\%F \%T\%.3f" => Datetime("ms"). If no fractional second
component is found then the default is "us" (microsecond).
}
\examples{
s = pl$Series(
  c(
    "2021-04-22",
    "2022-01-04 00:00:00",
    "01/31/22",
    "Sun Jul  8 00:34:60 2001"
  ),
  "date"
)
#' #join multiple passes with different format
s$to_frame()$with_columns(
  pl$col("date")
  $str$strptime(pl$Date, "\%F", strict = FALSE)
  $fill_null(pl$col("date")$str$strptime(pl$Date, "\%F \%T", strict = FALSE))
  $fill_null(pl$col("date")$str$strptime(pl$Date, "\%D", strict = FALSE))
  $fill_null(pl$col("date")$str$strptime(pl$Date, "\%c", strict = FALSE))
)

txt_datetimes = c(
  "2023-01-01 11:22:33 -0100",
  "2023-01-01 11:22:33 +0300",
  "invalid time"
)

pl$lit(txt_datetimes)$str$strptime(
  pl$Datetime("ns"),
  format = "\%Y-\%m-\%d \%H:\%M:\%S \%z", strict = FALSE,
)$to_series()
}
\keyword{ExprStr}
