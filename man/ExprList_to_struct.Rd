% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__list.R
\name{ExprList_to_struct}
\alias{ExprList_to_struct}
\alias{list_to_struct}
\title{List to Struct}
\format{
function
}
\arguments{
\item{n_field_strategy}{Strategy to determine the number of fields of the struct.
default = "first_non_null": set number of fields equal to the length of the
first non zero-length sublist. else 'max_width'; else  "max_width":
set number of fields as max length of all sublists.}

\item{name_generator}{an R function that takes an R scalar double and outputs
a string value. It is a f64 because i32 might not be a big enough enumerate all.
The default (\code{NULL}) is equivalent to the R function
\verb{\\(idx) paste0("field_", idx)}}

\item{upper_bound}{upper_bound A polars \code{LazyFrame} needs to know the schema
at all time. The caller therefore must provide an \code{upper_bound} of struct
fields that will be set. If set incorrectly, downstream operation may fail.
For instance an \code{all()$sum()} expression will look in the current schema to
determine which columns to select. It is advised to set this value in a lazy
query.}
}
\value{
Expr
}
\description{
List to Struct
}
\examples{
df = pl$DataFrame(list(a = list(1:3, 1:2)))
df2 = df$select(pl$col("a")$list$to_struct(
  name_generator = \(idx) paste0("hello_you_", idx)
))
df2$unnest()

df2$to_list()
}
\keyword{ExprList}
