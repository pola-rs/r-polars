% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions__eager.R
\name{pl_datetime_ranges}
\alias{pl_datetime_ranges}
\title{Generate a list containing a datetime range}
\usage{
pl_datetime_ranges(
  start,
  end,
  interval = "1d",
  ...,
  closed = "both",
  time_unit = NULL,
  time_zone = NULL
)
}
\arguments{
\item{start}{Lower bound of the date range. Something that can be coerced to
a Date or a \link[=DataType_Datetime]{Datetime} expression. See examples for details.}

\item{end}{Upper bound of the date range. Something that can be coerced to a
Date or a \link[=DataType_Datetime]{Datetime} expression. See examples for details.}

\item{interval}{Interval of the range periods, specified as a \link{difftime} object
or using the Polars duration string language. See the \code{Interval} section for
details.}

\item{...}{Ignored.}

\item{closed}{Define which sides of the range are closed (inclusive).
One of the followings: \code{"both"} (default), \code{"left"}, \code{"right"}, \code{"none"}.}

\item{time_unit}{Time unit of the resulting the \link[=DataType_Datetime]{Datetime}
data type. One of \code{"ns"}, \code{"us"}, \code{"ms"} or \code{NULL}}

\item{time_zone}{Time zone of the resulting \link[=DataType_Datetime]{Datetime}
data type.}
}
\value{
An \link[=Expr_class]{Expr} of data type list(\link[=DataType_Datetime]{Datetime})
}
\description{
Generate a list containing a datetime range
}
\section{Interval}{

\code{interval} is created according to the following string language:
\itemize{
\item 1ns (1 nanosecond)
\item 1us (1 microsecond)
\item 1ms (1 millisecond)
\item 1s (1 second)
\item 1m (1 minute)
\item 1h (1 hour)
\item 1d (1 calendar day)
\item 1w (1 calendar week)
\item 1mo (1 calendar month)
\item 1q (1 calendar quarter)
\item 1y (1 calendar year)
}

Or combine them: \code{"3d12h4m25s"} # 3 days, 12 hours, 4 minutes, and 25 seconds

By "calendar day", we mean the corresponding time on the next day
(which may not be 24 hours, due to daylight savings).
Similarly for "calendar week", "calendar month", "calendar quarter", and
"calendar year".
}

\examples{
df = pl$DataFrame(
  start = as.POSIXct(c("2022-01-01 10:00", "2022-01-01 11:00", NA)),
  end = as.POSIXct("2022-01-01 12:00")
)

df$with_columns(
  dt_range = pl$datetime_ranges("start", "end", interval = "1h"),
  dt_range_cr = pl$datetime_ranges("start", "end", closed = "right", interval = "1h")
)

# provide a custom "end" value
df$with_columns(
  dt_range_lit = pl$datetime_ranges(
    "start", pl$lit(as.POSIXct("2022-01-01 11:00")),
    interval = "1h"
  )
)
}
\seealso{
\code{\link[=pl_datetime_range]{pl$datetime_range()}} to create a simple Series
of data type Datetime.
}
