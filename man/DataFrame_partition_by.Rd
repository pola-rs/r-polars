% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_partition_by}
\alias{DataFrame_partition_by}
\title{Split a DataFrame into multiple DataFrames}
\usage{
DataFrame_partition_by(
  ...,
  maintain_order = TRUE,
  include_key = TRUE,
  as_nested_list = FALSE
)
}
\arguments{
\item{...}{Characters of column names to group by. Passed to \code{\link[=pl_col]{pl$col()}}.}

\item{maintain_order}{If \code{TRUE}, ensure that the order of the groups is consistent with the input data.
This is slower than a default partition by operation.}

\item{include_key}{If \code{TRUE}, include the columns used to partition the DataFrame in the output.}

\item{as_nested_list}{This affects the format of the output.
If \code{FALSE} (default), the output is a flat \link{list} of \link[=DataFrame_class]{DataFrames}.
IF \code{TRUE} and one of the \code{maintain_order} or \code{include_key} argument is \code{TRUE},
then each element of the output has two children: \code{key} and \code{data}.
See the examples for more details.}
}
\value{
A list of \link[=DataFrame_class]{DataFrames}. See the examples for details.
}
\description{
Similar to \code{\link[=DataFrame_group_by]{$group_by()}}.
Group by the given columns and return the groups as separate \link[=DataFrame_class]{DataFrames}.
It is useful to use this in combination with functions like \code{\link[=lapply]{lapply()}} or \code{purrr::map()}.
}
\examples{
df = pl$DataFrame(
  a = c("a", "b", "a", "b", "c"),
  b = c(1, 2, 1, 3, 3),
  c = c(5, 4, 3, 2, 1)
)
df

# Pass a single column name to partition by that column.
df$partition_by("a")

# Partition by multiple columns.
df$partition_by("a", "b")

# Partition by column data type
df$partition_by(pl$String)

# If `as_nested_list = TRUE`, the output is a list whose elements have a `key` and a `data` field.
# The `key` is a named list of the key values, and the `data` is the DataFrame.
df$partition_by("a", "b", as_nested_list = TRUE)

# `as_nested_list = TRUE` should be used with `maintain_order = TRUE` or `include_key = TRUE`.
tryCatch(
  df$partition_by("a", "b", maintain_order = FALSE, include_key = FALSE, as_nested_list = TRUE),
  warning = function(w) w
)

# Example of using with lapply(), and printing the key and the data summary
df$partition_by("a", "b", maintain_order = FALSE, as_nested_list = TRUE) |>
  lapply(\(x) {
    sprintf("\nThe key value of `a` is \%s and the key value of `b` is \%s\n", x$key$a, x$key$b) |>
      cat()
    x$data$drop(names(x$key))$describe() |>
      print()
    invisible(NULL)
  }) |>
  invisible()
}
\seealso{
\itemize{
\item \code{\link[=DataFrame_group_by]{<DataFrame>$group_by()}}
}
}
