% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_as_duration.R
\name{parse_as_polars_duration_string}
\alias{parse_as_polars_duration_string}
\alias{parse_as_polars_duration_string.character}
\alias{parse_as_polars_duration_string.difftime}
\title{Parse an object as the Polars duration string language}
\usage{
parse_as_polars_duration_string(x, ...)

\method{parse_as_polars_duration_string}{character}(x, ...)

\method{parse_as_polars_duration_string}{difftime}(x, ...)
}
\arguments{
\item{x}{An object to parse as a duration.
It's length should be \code{1} and it should not be \code{NA}.}

\item{...}{Additional arguments passed to methods.}
}
\description{
A generic function for parsing an object as a string representation of a duration.
See the \verb{Polars duration string language} section for details.
}
\section{Polars duration string language}{

Polars duration string language is a simple representation of
durations. It is used in many Polars functions that accept durations.

It has the following format:
\itemize{
\item 1ns (1 nanosecond)
\item 1us (1 microsecond)
\item 1ms (1 millisecond)
\item 1s (1 second)
\item 1m (1 minute)
\item 1h (1 hour)
\item 1d (1 calendar day)
\item 1w (1 calendar week)
\item 1mo (1 calendar month)
\item 1q (1 calendar quarter)
\item 1y (1 calendar year)
}

Or combine them: \code{"3d12h4m25s"} # 3 days, 12 hours, 4 minutes, and 25 seconds

By "calendar day", we mean the corresponding time on the next day
(which may not be 24 hours, due to daylight savings).
Similarly for "calendar week", "calendar month", "calendar quarter", and "calendar year".
}

\examples{
# A single character is passed as is
parse_as_polars_duration_string("1d")

# A single difftime is converted to a duration string
parse_as_polars_duration_string(as.difftime(1, units = "days"))
}
