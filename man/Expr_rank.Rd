% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__expr.R
\name{Expr_rank}
\alias{Expr_rank}
\title{Rank elements}
\usage{
Expr_rank(
  method = c("average", "min", "max", "dense", "ordinal", "random"),
  descending = FALSE,
  seed = NULL
)
}
\arguments{
\item{method}{String, one of \code{"average"} (default), \code{"min"}, \code{"max"},
\code{"dense"}, \code{"ordinal"}, \code{"random"}. The method used to assign ranks to tied
elements:
\itemize{
\item \code{"average"}: The average of the ranks that would have been assigned to
all the tied values is assigned to each value.
\item \code{"min"}: The minimum of the ranks that would have been assigned to all
the tied values is assigned to each value. (This is also referred to
as "competition" ranking.)
\item \code{"max"} : The maximum of the ranks that would have been assigned to all
the tied values is assigned to each value.
\item \code{"dense"}: Like 'min', but the rank of the next highest element is assigned
the rank immediately after those assigned to the tied elements.
\item \code{"ordinal"} : All values are given a distinct rank, corresponding to the
order that the values occur in the Series.
\item \code{"random"} : Like 'ordinal', but the rank for ties is not dependent on the
order that the values occur in the Series.
}}

\item{descending}{Rank in descending order.}

\item{seed}{string parsed or number converted into uint64. Used if method="random".}
}
\value{
Expr
}
\description{
Assign ranks to data, dealing with ties appropriately.
}
\examples{
#  The 'average' method:
pl$DataFrame(a = c(3, 6, 1, 1, 6))$
  with_columns(rank = pl$col("a")$rank())

#  The 'ordinal' method:
pl$DataFrame(a = c(3, 6, 1, 1, 6))$
  with_columns(rank = pl$col("a")$rank("ordinal"))
}
