% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-range-time_range.R
\name{pl__time_range}
\alias{pl__time_range}
\title{Generate a time range}
\usage{
pl__time_range(
  start = NULL,
  end = NULL,
  interval = "1h",
  ...,
  closed = c("both", "left", "none", "right")
)
}
\arguments{
\item{start}{Lower bound of the time range. If omitted, defaults to
\code{00:00:00.000}.}

\item{end}{Upper bound of the time range. If omitted, defaults to
\code{23:59:59.999}}

\item{interval}{Interval of the range periods, specified as a \link{difftime}
or using the Polars duration string language (see details).}

\item{...}{These dots are for future extensions and must be empty.}

\item{closed}{Define which sides of the range are closed (inclusive).
One of the following: \code{"both"} (default), \code{"left"}, \code{"right"}, \code{"none"}.}
}
\value{
A polars \link{expression}
}
\description{
Generate a time range
}
\section{Polars duration string language}{

Polars duration string language is a simple representation of
durations. It is used in many Polars functions that accept durations.

It has the following format:
\itemize{
\item 1ns (1 nanosecond)
\item 1us (1 microsecond)
\item 1ms (1 millisecond)
\item 1s (1 second)
\item 1m (1 minute)
\item 1h (1 hour)
\item 1d (1 calendar day)
\item 1w (1 calendar week)
\item 1mo (1 calendar month)
\item 1q (1 calendar quarter)
\item 1y (1 calendar year)
}

Or combine them: \code{"3d12h4m25s"} # 3 days, 12 hours, 4 minutes, and 25 seconds

By "calendar day", we mean the corresponding time on the next day
(which may not be 24 hours, due to daylight savings).
Similarly for "calendar week", "calendar month", "calendar quarter", and "calendar year".
}

\examples{
\dontshow{if (requireNamespace("hms", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
pl$select(
  time = pl$time_range(
    start = hms::parse_hms("14:00:00"),
    interval = as.difftime("3:15:00")
  )
)
\dontshow{\}) # examplesIf}
}
