% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{pl_options}
\alias{pl_options}
\alias{set_options}
\alias{reset_options}
\title{Set polars options}
\arguments{
\item{strictly_immutable}{Keep polars strictly immutable. Polars/arrow is in
general pro "immutable objects". Immutability is also classic in R. To mimic
the Python-polars API, set this to \code{FALSE.}}

\item{maintain_order}{Set \code{maintain_order = TRUE} as default.}

\item{do_not_repeat_call}{Do not print the call causing the error in error
messages. The default (\code{FALSE}) is to show them.}

\item{debug_polars}{Print additional information to debug Polars.}

\item{no_messages}{Hide messages.}
}
\value{
current settings as list
}
\description{
Set polars options
}
\details{
Every option can be accessed via \verb{pl$options$<name>()} or changed
with \verb{pl$options$<name>(<value>)}

setting an options may be rejected if not passing opt_requirements
}
\examples{
# polars options read via `pl$options$<name>()`
pl$options$strictly_immutable()
pl$options$maintain_order()

# write via `pl$options$<name>(<value>)`, invalided values/types are rejected
pl$options$maintain_order(TRUE)
tryCatch(
  {
    pl$options$maintain_order(42)
  },
  error = function(err) cat(as.character(err))
)
pl$set_options(strictly_immutable = FALSE)
pl$options


# setting strictly_immutable = 42 will be rejected as
tryCatch(
  pl$set_options(strictly_immutable = 42),
  error = function(e) print(e)
)

# reset options like this
pl$reset_options()
}
