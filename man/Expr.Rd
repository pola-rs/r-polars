% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__expr.R
\name{Expr}
\alias{Expr}
\alias{Expr_lit}
\alias{lit}
\alias{Expr_suffix}
\alias{suffix}
\alias{Expr_prefix}
\alias{prefix}
\alias{Expr_reverse}
\alias{reverse}
\title{Polars Expr}
\usage{
Expr_lit(x)

Expr_suffix(suffix)

Expr_prefix(prefix)

Expr_reverse()
}
\arguments{
\item{x}{an R Scalar, or R vector/list (via Series) into Expr}

\item{suffix}{string suffix to be added to a name}

\item{prefix}{string suffix to be added to a name}
}
\value{
Expr, literal of that value

Expr

Expr

Expr
}
\description{
Polars pl$Expr
}
\details{
pl$lit(NULL) translates into a typeless polars Null
}
\examples{
2+2
#Expr has the following methods/constructors
ls(rpolars:::Expr)

pl$col("this_column")$sum()$over("that_column")
#scalars to literal, explit `pl$lit(42)` implicit `+ 2`
pl$col("some_column") / pl$lit(42) + 2

#vector to literal explicitly via Series and back again
pl$DataFrame(list())$select(pl$lit(pl$Series(1:4)))$to_list()[[1L]] #R vector to expression and back again

#vectors to literal implicitly
(pl$lit(2) + 1:4 ) / 4:1
pl$col("some")$suffix("_column")
pl$col("some")$suffix("_column")
pl$DataFrame(list(a=1:5))$select(pl$col("a")$reverse())
}
\keyword{Expr}
