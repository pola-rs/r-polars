% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_transpose}
\alias{DataFrame_transpose}
\title{Transpose a DataFrame over the diagonal.}
\usage{
DataFrame_transpose(
  include_header = FALSE,
  header_name = "column",
  column_names = NULL
)
}
\arguments{
\item{include_header}{If \code{TRUE}, the column names will be added as first column.}

\item{header_name}{If \code{include_header} is \code{TRUE}, this determines the name of the column
that will be inserted.}

\item{column_names}{Character vector indicating the new column names. If \code{NULL} (default),
the columns will be named as "column_1", "column_2", etc. The length of this vector must match
the number of rows of the original input.}
}
\value{
DataFrame
}
\description{
Transpose a DataFrame over the diagonal.
}
\details{
This is a very expensive operation.

Transpose may be the fastest option to perform non foldable (see \code{fold()} or \code{reduce()})
row operations like median.

Polars transpose is currently eager only, likely because it is not trivial to deduce the schema.
}
\examples{

# simple use-case
pl$DataFrame(mtcars)$transpose(include_header = TRUE, column_names = rownames(mtcars))

# All rows must have one shared supertype, recast Categorical to Utf8 which is a supertype
# of f64, and then dataset "Iris" can be transposed
pl$DataFrame(iris)$with_columns(pl$col("Species")$cast(pl$Utf8))$transpose()

}
\keyword{DataFrame}
