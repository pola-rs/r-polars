% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_json.R
\name{pl_scan_ndjson}
\alias{pl_scan_ndjson}
\title{New LazyFrame from NDJSON}
\usage{
pl_scan_ndjson(
  source,
  ...,
  infer_schema_length = 100,
  batch_size = NULL,
  n_rows = NULL,
  low_memory = FALSE,
  rechunk = FALSE,
  row_index_name = NULL,
  row_index_offset = 0,
  reuse_downloaded = TRUE,
  ignore_errors = FALSE
)
}
\arguments{
\item{source}{Path to a file or URL. It is possible to provide multiple paths
provided that all NDJSON files have the same schema. It is not possible to
provide several URLs.}

\item{...}{Ignored.}

\item{infer_schema_length}{Maximum number of rows to read to infer the column
types. If set to 0, all columns will be read as UTF-8. If \code{NULL}, a full
table scan will be done (slow).}

\item{batch_size}{Number of rows that will be processed per thread.}

\item{n_rows}{Maximum number of rows to read.}

\item{low_memory}{Reduce memory usage (will yield a lower performance).}

\item{rechunk}{Reallocate to contiguous memory when all chunks / files are
parsed.}

\item{row_index_name}{If not \code{NULL}, this will insert a row count column with
the given name into the DataFrame.}

\item{row_index_offset}{Offset to start the row_count column (only used if
the name is set).}

\item{reuse_downloaded}{If \code{TRUE}(default) and a URL was provided, cache the
downloaded files in session for an easy reuse.}

\item{ignore_errors}{If \code{TRUE}, do not error if parsing fails because of
schema mismatches.}
}
\value{
A LazyFrame
}
\description{
Read a file from path into a polars LazyFrame.
}
\examples{
if (require("jsonlite", quietly = TRUE)) {
  ndjson_filename = tempfile()
  jsonlite::stream_out(iris, file(ndjson_filename), verbose = FALSE)
  pl$scan_ndjson(ndjson_filename)$collect()
}
}
