% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions__eager.R
\name{pl_raw_list}
\alias{pl_raw_list}
\alias{[.rpolars_raw_list}
\alias{as.list.rpolars_raw_list}
\title{Polars raw list}
\usage{
pl_raw_list(...)

\method{[}{rpolars_raw_list}(x, index)

\method{as.list}{rpolars_raw_list}(x, ...)
}
\arguments{
\item{...}{Elements}

\item{x}{A \code{rpolars_raw_list} object created with \code{pl$raw_list()}}

\item{index}{Elements to select}
}
\value{
An R list where any elements must be raw, and the S3 class is
\code{c("rpolars_raw_list","list")}.
}
\description{
Create an "rpolars_raw_list", which is an R list where all elements must be
an R raw or \code{NULL}.
}
\details{
In R, raw can contain a binary sequence of bytes, and the length is the number
of bytes. In polars a Series of DataType \link[=pl_dtypes]{Binary} is more like a
vector of vectors of bytes where missing values are allowed, similar to how
\code{NA}s can be present in vectors.

To ensure correct round-trip conversion, r-polars uses an R list where any
elements must be raw or \code{NULL} (encoded as missing), and the S3 class is
\code{c("rpolars_raw_list","list")}.
}
\examples{
# create a rpolars_raw_list
raw_list = pl$raw_list(raw(1), raw(3), charToRaw("alice"), NULL)

# pass it to Series or lit
pl$Series(raw_list)
pl$lit(raw_list)

# convert polars bianry Series to rpolars_raw_list
pl$Series(raw_list)$to_r()


# NB: a plain list of raws yield a polars Series of DateType [list[Binary]]
# which is not the same
pl$Series(list(raw(1), raw(2)))

# to regular list, use as.list or unclass
as.list(raw_list)
# subsetting preserves class
pl$raw_list(NULL, raw(2), raw(3))[1:2]
# to regular list, use as.list or unclass
pl$raw_list(NULL, raw(2), raw(3)) |> as.list()
}
\keyword{functions}
