% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions__eager.R
\name{pl_raw_list}
\alias{pl_raw_list}
\alias{[.rpolars_raw_list}
\alias{as.list.rpolars_raw_list}
\title{Polars raw list}
\usage{
\method{[}{rpolars_raw_list}(x, index)

\method{as.list}{rpolars_raw_list}(x, ...)
}
\arguments{
\item{x}{rpolars_raw_list list}

\item{index}{elements to get subset}

\item{...}{elements}
}
\value{
an R list where any elements must be raw, and the S3 class is
c("rpolars_raw_list","list").
}
\description{
create an "rpolars_raw_list", which is an R list where all elements must be an R raw or NULL.
}
\details{
In R raw can contain a binary sequence of bytes, and the length is the number of bytes.
In polars a Series of DataType \link[=pl_dtypes]{Binary} is more like a vector of vectors of bytes and missings
'Nulls' is allowed, similar to R NAs in vectors.

To ensure correct round-trip conversion r-polars uses an R list where any elements must be
raw or NULL(encodes missing), and the S3 class is c("rpolars_raw_list","list").

the same as unclass(x)
}
\examples{

# craete a rpolars_raw_list
raw_list = pl$raw_list(raw(1), raw(3), charToRaw("alice"), NULL)


# pass it to Series or lit
pl$Series(raw_list)
pl$lit(raw_list)

# convert polars bianry Series to rpolars_raw_list
pl$Series(raw_list)$to_r()


# NB a plain list of raws yield a polars Series of DateType [list[Binary]] which is not the same
pl$Series(list(raw(1), raw(2)))

# to regular list, use as.list or unclass
as.list(raw_list)

# subsetting preserves class
pl$raw_list(NULL, raw(2), raw(3))[1:2]
# to regular list, use as.list or unclass
pl$raw_list(NULL, raw(2), raw(3)) |> as.list()
}
\keyword{functions}
