% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_join_where}
\alias{DataFrame_join_where}
\title{Perform a join based on one or multiple (in)equality predicates}
\usage{
DataFrame_join_where(other, ..., suffix = "_right")
}
\arguments{
\item{other}{DataFrame to join with.}

\item{...}{(In)Equality condition to join the two tables on. When a column
name occurs in both tables, the proper suffix must be applied in the
predicate. For example, if both tables have a column \code{"x"} that you want to
use in the conditions, you must refer to the column of the right table as
\code{"x<suffix>"}.}

\item{suffix}{Suffix to append to columns with a duplicate name.}
}
\value{
A DataFrame
}
\description{
This performs an inner join, so only rows where all predicates are true are
included in the result, and a row from either DataFrame may be included
multiple times in the result.

Note that the row order of the input DataFrames is not preserved.
}
\examples{
east = pl$DataFrame(
  id = c(100, 101, 102),
  dur = c(120, 140, 160),
  rev = c(12, 14, 16),
  cores = c(2, 8, 4)
)

west = pl$DataFrame(
  t_id = c(404, 498, 676, 742),
  time = c(90, 130, 150, 170),
  cost = c(9, 13, 15, 16),
  cores = c(4, 2, 1, 4)
)

east$join_where(
  west,
  pl$col("dur") < pl$col("time"),
  pl$col("rev") < pl$col("cost")
)
}
