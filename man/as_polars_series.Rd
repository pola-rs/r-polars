% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_polars.R
\name{as_polars_series}
\alias{as_polars_series}
\alias{as_polars_series.default}
\alias{as_polars_series.RPolarsSeries}
\alias{as_polars_series.RPolarsExpr}
\alias{as_polars_series.RPolarsThen}
\alias{as_polars_series.RPolarsChainedThen}
\alias{as_polars_series.POSIXlt}
\alias{as_polars_series.data.frame}
\alias{as_polars_series.vctrs_rcrd}
\alias{as_polars_series.Array}
\alias{as_polars_series.ChunkedArray}
\alias{as_polars_series.nanoarrow_array}
\alias{as_polars_series.nanoarrow_array_stream}
\title{To polars Series}
\usage{
as_polars_series(x, name = NULL, ...)

\method{as_polars_series}{default}(x, name = NULL, ...)

\method{as_polars_series}{RPolarsSeries}(x, name = NULL, ...)

\method{as_polars_series}{RPolarsExpr}(x, name = NULL, ...)

\method{as_polars_series}{RPolarsThen}(x, name = NULL, ...)

\method{as_polars_series}{RPolarsChainedThen}(x, name = NULL, ...)

\method{as_polars_series}{POSIXlt}(x, name = NULL, ...)

\method{as_polars_series}{data.frame}(x, name = NULL, ...)

\method{as_polars_series}{vctrs_rcrd}(x, name = NULL, ...)

\method{as_polars_series}{Array}(x, name = NULL, ..., rechunk = TRUE)

\method{as_polars_series}{ChunkedArray}(x, name = NULL, ..., rechunk = TRUE)

\method{as_polars_series}{nanoarrow_array}(x, name = NULL, ...)

\method{as_polars_series}{nanoarrow_array_stream}(x, name = NULL, ...)
}
\arguments{
\item{x}{Object to convert into a polars Series}

\item{name}{A string to use as the name of the Series.
If \code{NULL} (default), the name of \code{x} is used or an unnamed Series is created.}

\item{...}{Additional arguments passed to methods.}

\item{rechunk}{A logical flag (default \code{TRUE}). Make sure that all data is in contiguous memory.}
}
\value{
a \link[=Series_class]{Series}
}
\description{
\code{\link[=as_polars_series]{as_polars_series()}} is a generic function that converts an R object to a
polars Series. It is basically a wrapper for \link[=pl_Series]{pl$Series()}.
}
\examples{
as_polars_series(1:4)

as_polars_series(list(1:4))

as_polars_series(data.frame(a = 1:4))

as_polars_series(pl$Series(1:4, name = "foo"))

as_polars_series(pl$lit(1:4))
}
