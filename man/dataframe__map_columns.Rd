% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe-frame.R
\name{dataframe__map_columns}
\alias{dataframe__map_columns}
\title{Apply eager functions to columns of a DataFrame}
\usage{
dataframe__map_columns(column_names, lambda)
}
\arguments{
\item{column_names}{Column names or selectors specifying columns to apply the function to.}

\item{lambda}{A function that will receive a \link{Series} as the first argument.}
}
\value{
A polars \link{DataFrame}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

A higher-order function to apply functions to selected columns of a \link{DataFrame},
similar to \link[purrr:map_if]{purrr::map_at}. The selected columns will be materialized as
\link{Series} before the function is applied, and the return value of the function
will be converted back to a \link{Series} by \link{as_polars_series}.

It is recommended to use \code{\link[=dataframe__with_columns]{<dataframe>$with_columns()}}
unless they are using expressions that are only possible on \link{Series} and not on \link{Expr}.
This is almost never the case, except for a very select few functions that cannot know
the output datatype without looking at the data.
}
\examples{
df1 <- pl$DataFrame(
  a = 1:4,
  b = c("10", "20", "30", "40"),
)

# Apply `<series>$shrink_dtype()` to the "a" column
df1$map_columns("a", \(s) s$shrink_dtype())

# Convert the "b" column to integer by the base R function `as.integer()`
df1$map_columns("b", \(s) s$to_r_vector() |> as.integer())

df2 <- pl$DataFrame(
  a = c('{"x":"a"}', NA, '{"x":"b"}', NA),
  b = c('{"a":1, "b": true}', NA, '{"a":2, "b": false}', NA),
)

# Apply `<series>$str$json_decode()` to both the "a" and "b" columns
df2$map_columns(c("a", "b"), \(s) s$str$json_decode())

# Use a selector to apply the function to all columns
df2$map_columns(cs$all(), \(s) s$str$json_decode())
}
