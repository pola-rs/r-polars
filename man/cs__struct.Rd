% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selectors.R
\name{cs__struct}
\alias{cs__struct}
\title{Select all struct columns}
\usage{
cs__struct()
}
\value{
A Polars \link[=cs]{selector}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\examples{
df <- pl$DataFrame(
  foo = data.frame(a = c("xx", "x"), b = c("yy", "y")),
  bar = data.frame(a = c(123, 456), b = c(789, 101)),
  baz = c(2.0, 5.5),
)

# Select all struct columns:
df$select(cs$struct())

# Select all columns except for those that are struct:
df$select(!cs$struct())

# If you want to select specific struct columns,
# you can use the `by_dtype()` selector:
df$select(cs$by_dtype(pl$Struct(
  a = pl$String,
  b = pl$String
)))
}
\seealso{
\itemize{
\item \link{cs} for the documentation on operators supported by selectors.
\item \code{\link[=cs__by_dtype]{cs$by_dtype()}}: Select all columns matching the given dtype(s).
\item \code{\link[=cs__list]{cs$list()}}: Select all list columns.
\item \code{\link[=cs__array]{cs$array()}}: Select all array columns.
\item \code{\link[=cs__nested]{cs$nested()}}: Select all nested columns.
}
}
