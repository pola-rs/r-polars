% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__string.R
\name{ExprStr_replace_all}
\alias{ExprStr_replace_all}
\title{Replace all matching regex/literal substrings with a new string value}
\usage{
ExprStr_replace_all(pattern, value, ..., literal = FALSE)
}
\arguments{
\item{pattern}{A character or something can be coerced to a string \link[=Expr_class]{Expr}
of a valid regex pattern, compatible with the \href{https://docs.rs/regex/latest/regex/}{regex crate}.}

\item{value}{A character or an \link[=Expr_class]{Expr} of string
that will replace the matched substring.}

\item{...}{Ignored.}

\item{literal}{Logical. If \code{TRUE} (default), treat \code{pattern} as a literal string,
not as a regular expression.}
}
\value{
\link[=Expr_class]{Expr} of String type
}
\description{
Replace all matching regex/literal substrings with a new string value
}
\details{
To modify regular expression behaviour (such as case-sensitivity)
with flags, use the inline \code{(?iLmsuxU)} syntax. See the regex crateâ€™s section
on \href{https://docs.rs/regex/latest/regex/#grouping-and-flags}{grouping and flags}
for additional information about the use of inline expression modifiers.
}
\section{Capture groups}{

The dollar sign (\code{$}) is a special character related to capture groups.
To refer to a literal dollar sign, use \verb{$$} instead or set \code{literal} to \code{TRUE}.
}

\examples{
df = pl$DataFrame(id = 1L:2L, text = c("abcabc", "123a123"))
df$with_columns(pl$col("text")$str$replace_all("a", "-"))

# Capture groups are supported.
# Use `${1}` in the value string to refer to the first capture group in the pattern,
# `${2}` to refer to the second capture group, and so on.
# You can also use named capture groups.
df = pl$DataFrame(word = c("hat", "hut"))
df$with_columns(
  positional = pl$col("word")$str$replace_all("h(.)t", "b${1}d"),
  named = pl$col("word")$str$replace_all("h(?<vowel>.)t", "b${vowel}d")
)

# Apply case-insensitive string replacement using the `(?i)` flag.
df = pl$DataFrame(
  city = "Philadelphia",
  season = c("Spring", "Summer", "Autumn", "Winter"),
  weather = c("Rainy", "Sunny", "Cloudy", "Snowy")
)
df$with_columns(
  pl$col("weather")$str$replace_all(
    "(?i)foggy|rainy|cloudy|snowy", "Sunny"
  )
)
}
\seealso{
\itemize{
\item \code{\link[=ExprStr_replace]{<Expr>$str$replace()}}
}
}
