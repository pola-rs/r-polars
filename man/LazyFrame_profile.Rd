% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyframe__lazy.R
\name{LazyFrame_profile}
\alias{LazyFrame_profile}
\title{Collect and profile a lazy query.}
\usage{
LazyFrame_profile()
}
\value{
List of two DataFrames, (collected result, profile stats)
}
\description{
This will run the query and return a tuple containing the materialized DataFrame and
a DataFrame that contains profiling information of each node that is executed.
}
\details{
The units of the timings are microseconds.
}
\examples{

#Use $profile() to compare two queries

# print one '.', take a series convert to r vector, take first value, add 5
r_func = \(s) {cat(".");s$to_r()[1] + 5}

# map each Species-group of each numeric column with an R function, takes ~7000us slow !
pl$LazyFrame(iris)$
  sort("Sepal.Length")$  #for no specific reason
  groupby("Species", maintain_order = TRUE)$
  agg(pl$col(pl$Float64)$apply(r_func))$
  profile()

# map each Species-group with native polars, takes ~120us better
pl$LazyFrame(iris)$
  sort("Sepal.Length")$
  groupby("Species", maintain_order = TRUE)$
  agg(pl$col(pl$Float64)$first() + 5 )$
  profile()
}
\keyword{LazyFrame}
