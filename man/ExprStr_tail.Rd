% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__string.R
\name{ExprStr_tail}
\alias{ExprStr_tail}
\title{Return the last n characters of each string}
\usage{
ExprStr_tail(n)
}
\arguments{
\item{n}{Length of the slice (integer or expression). Strings are parsed as
column names. Negative indexing is supported.}
}
\value{
Expr: Series of dtype String.
}
\description{
Return the last n characters of each string
}
\details{
The \code{n} input is defined in terms of the number of characters in the (UTF-8)
string. A character is defined as a Unicode scalar value. A single character
is represented by a single byte when working with ASCII text, and a maximum
of 4 bytes otherwise.

When the \code{n} input is negative, \code{tail()} returns characters starting from the
\code{n}th from the beginning of the string. For example, if \code{n = -3}, then all
characters except the first three are returned.

If the length of the string has fewer than \code{n} characters, the full string is
returned.
}
\examples{
df = pl$DataFrame(
  s = c("pear", NA, "papaya", "dragonfruit"),
  n = c(3, 4, -2, -5)
)

df$with_columns(
  s_tail_5 = pl$col("s")$str$tail(5),
  s_tail_n = pl$col("s")$str$tail("n")
)
}
