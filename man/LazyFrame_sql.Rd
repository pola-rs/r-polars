% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyframe__lazy.R
\name{LazyFrame_sql}
\alias{LazyFrame_sql}
\title{Execute a SQL query against the LazyFrame}
\usage{
LazyFrame_sql(query, ..., table_name = NULL, envir = parent.frame())
}
\arguments{
\item{query}{A character of the SQL query to execute.}

\item{...}{Ignored.}

\item{table_name}{\code{NULL} (default) or a character of an explicit name for the table
that represents the calling frame (the alias \code{"self"} will always be registered/available).}

\item{envir}{The environment to search for polars
\link[=DataFrame_class]{DataFrames}/\link[=LazyFrame_class]{LazyFrames}.}
}
\value{
\link[=LazyFrame_class]{LazyFrame}
}
\description{
The calling frame is automatically registered as a table in the SQL context
under the name \code{"self"}. All \link[=DataFrame_class]{DataFrames} and
\link[=LazyFrame_class]{LazyFrames} found in the \code{envir} are also registered,
using their variable name.
More control over registration and execution behaviour is available by
the \link[=SQLContext_class]{SQLContext} object.
}
\details{
This functionality is considered \strong{unstable}, although it is close to
being considered stable. It may be changed at any point without it being
considered a breaking change.
}
\examples{
\dontshow{if (polars_info()$features$sql) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
lf1 = pl$LazyFrame(a = 1:3, b = 6:8, c = c("z", "y", "x"))
lf2 = pl$LazyFrame(a = 3:1, d = c(125, -654, 888))

# Query the LazyFrame using SQL:
lf1$sql("SELECT c, b FROM self WHERE a > 1")$collect()

# Join two LazyFrames:
lf1$sql(
  "
SELECT self.*, d
FROM self
INNER JOIN lf2 USING (a)
WHERE a > 1 AND b < 8
"
)$collect()

# Apply SQL transforms (aliasing "self" to "frame") and subsequently
# filter natively (you can freely mix SQL and native operations):
lf1$sql(
  query = r"(
SELECT
 a,
MOD(a, 2) == 0 AS a_is_even,
(b::float / 2) AS 'b/2',
CONCAT_WS(':', c, c, c) AS c_c_c
FROM frame
ORDER BY a
)",
  table_name = "frame"
)$filter(!pl$col("c_c_c")$str$starts_with("x"))$collect()
\dontshow{\}) # examplesIf}
}
\seealso{
\itemize{
\item \link[=SQLContext_class]{SQLContext}
}
}
