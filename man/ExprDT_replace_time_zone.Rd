% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__datetime.R
\name{ExprDT_replace_time_zone}
\alias{ExprDT_replace_time_zone}
\alias{(Expr)$dt$replace_time_zone}
\title{Replace time zone}
\usage{
ExprDT_replace_time_zone(tz, ambiguous = "raise", non_existent = "raise")
}
\arguments{
\item{tz}{NULL or string time zone from \code{\link[base:timezones]{base::OlsonNames()}}}

\item{ambiguous}{Determine how to deal with ambiguous datetimes:
\itemize{
\item \code{"raise"} (default): throw an error
\item \code{"earliest"}: use the earliest datetime
\item \code{"latest"}: use the latest datetime
\item \code{"null"}: return a null value
}}

\item{non_existent}{Determine how to deal with non-existent datetimes:
\itemize{
\item \code{"raise"} (default): throw an error
\item \code{"null"}: return a null value
}}
}
\value{
Expr of i64
}
\description{
Cast time zone for a Series of type Datetime. This is different from
\code{\link[=ExprDT_convert_time_zone]{$convert_time_zone()}} as it will also modify the
underlying timestamp. Use to correct a wrong time zone annotation. This will
change the corresponding global timepoint.
}
\examples{
df_1 = pl$DataFrame(x = as.POSIXct("2009-08-07 00:00:01", tz = "America/New_York"))

df_1$with_columns(
  pl$col("x")$dt$replace_time_zone("UTC")$alias("utc"),
  pl$col("x")$dt$replace_time_zone("Europe/Amsterdam")$alias("cest")
)

# You can use ambiguous to deal with ambiguous datetimes
df_2 = pl$DataFrame(
  x = seq(
    as.POSIXct("2018-10-28 01:30", tz = "UTC"),
    as.POSIXct("2018-10-28 02:30", tz = "UTC"),
    by = "30 min"
  )
)

df_2$with_columns(
  pl$col("x")$dt$replace_time_zone("Europe/Brussels", "earliest")$alias("earliest"),
  pl$col("x")$dt$replace_time_zone("Europe/Brussels", "latest")$alias("latest"),
  pl$col("x")$dt$replace_time_zone("Europe/Brussels", "null")$alias("null")
)
}
\keyword{ExprDT}
