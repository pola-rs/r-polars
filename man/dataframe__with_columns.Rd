% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe-frame.R
\name{dataframe__with_columns}
\alias{dataframe__with_columns}
\title{Modify/append column(s) of a DataFrame}
\usage{
dataframe__with_columns(...)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}>
Name-value pairs of objects to be converted to polars \link[=Expr]{expressions}
by the \code{\link[=as_polars_expr]{as_polars_expr()}} function.
Characters are parsed as column names, other non-expression inputs are parsed as
\link[=pl__lit]{literals}. Each name will be used as the expression name.}
}
\value{
A polars \link{DataFrame}
}
\description{
Add columns or modify existing ones with expressions. This is similar to
\code{dplyr::mutate()} as it keeps unmentioned columns (unlike \verb{$select()}).

However, unlike \code{dplyr::mutate()}, one cannot use new variables in subsequent
expressions in the same \verb{$with_columns()}call. For instance, if you create a
variable \code{x}, you will only be able to use it in another \verb{$with_columns()}
or \verb{$select()} call.
}
\examples{
# Pass an expression to add it as a new column.
df <- pl$DataFrame(
  a = 1:4,
  b = c(0.5, 4, 10, 13),
  c = c(TRUE, TRUE, FALSE, TRUE),
)
df$with_columns((pl$col("a")^2)$alias("a^2"))

# Added columns will replace existing columns with the same name.
df$with_columns(a = pl$col("a")$cast(pl$Float64))

# Multiple columns can be added
df$with_columns(
  (pl$col("a")^2)$alias("a^2"),
  (pl$col("b") / 2)$alias("b/2"),
  (pl$col("c")$not())$alias("not c"),
)

# Name expression instead of `$alias()`
df$with_columns(
  `a^2` = pl$col("a")^2,
  `b/2` = pl$col("b") / 2,
  `not c` = pl$col("c")$not(),
)
}
