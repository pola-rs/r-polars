% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/construction.R
\name{coerce_arrow}
\alias{coerce_arrow}
\title{#' to_struct and unnest again
#' @name pl$from_arrow
#' @param name name of new Series
#' @return @to_struct() returns a Series
#' @aliases to_struct
#' @keywords conversion
#' @examples
#' #none so for
arrow_to_pydf = function(at, schema = NULL, schema_overrides = NULL, rechunk = TRUE) {}
\usage{
coerce_arrow(arr, rechunk = TRUE)
}
\description{
data_dict = new.env(parent = emptyenv())
dictionary_cols = new.env(parent = emptyenv())
struct_cols = new.env(parent = emptyenv())
col_names = make.unique(gsub("^$","column",at$ColumnNames()),"_")
}
\details{
i_col = 0
lapply(at$columns, function(column) {
i_col <<- icol + 1
column = coerce_arrow(column)
if(is_arrow_dictonary(column)) {

\if{html}{\out{<div class="sourceCode">}}\preformatted{\}
}\if{html}{\out{</div>}}

})

}
arr = at$column(0)

is_arrow_dictonary = \(x) {
inherits(x$type,c("DictionaryType","FixedWidthType","DataType","ArrowObject","R6"))
}
}
