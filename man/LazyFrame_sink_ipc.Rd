% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyframe__lazy.R
\name{LazyFrame_sink_ipc}
\alias{LazyFrame_sink_ipc}
\title{LazyFrame stream output to arrow ipc file}
\usage{
LazyFrame_sink_ipc(
  path,
  compression = "zstd",
  maintain_order = TRUE,
  type_coercion = TRUE,
  predicate_pushdown = TRUE,
  projection_pushdown = TRUE,
  simplify_expression = TRUE,
  no_optimization = FALSE,
  slice_pushdown = TRUE
)
}
\arguments{
\item{path}{string, the path of the arrow ipc file}

\item{compression}{NULL or string, the compression method. One of \verb{\{'lz4', 'zstd'\}} if not NULL.
Choose “zstd” for good compression performance. Choose “lz4” for fast compression/decompression.}

\item{maintain_order}{bool, whether maintain the order the data was processed.
Setting this to FALSE will be slightly faster.}

\item{type_coercion}{Boolean. Coerce types such that operations succeed and
run on minimal required memory.}

\item{predicate_pushdown}{Boolean. Applies filters as early as possible at
scan level.}

\item{projection_pushdown}{Boolean. Select only the columns that are needed at the scan level.}

\item{simplify_expression}{Boolean. Various optimizations, such as constant folding
and replacing expensive operations with faster alternatives.}

\item{no_optimization}{Boolean. Turn off the following optimizations:
predicate_pushdown = FALSE
projection_pushdown = FALSE
slice_pushdown = FALSE
comm_subplan_elim = FALSE
comm_subexpr_elim = FALSE}

\item{slice_pushdown}{Boolean. Only load the required slice from the scan
Don't materialize sliced outputs
level. Don't materialize sliced outputs (e.g. \code{join$head(10)}).}
}
\description{
Persists a LazyFrame at the provided path.
This allows streaming results that are larger than RAM to be written to disk
}
\examples{
# sink table 'mtcars' from mem to ipc
tmpf = tempfile()
pl$LazyFrame(mtcars)$sink_ipc(tmpf)

# stream a query end-to-end (not supported yet) https://github.com/pola-rs/polars/issues/10406
# tmpf2 = tempfile()
# pl$scan_ipc(tmpf)$select(pl$col("cyl") * 2)$collect()$lazy()$sink_ipc(tmpf2)

# load ipc directly into a DataFrame / memory
# pl$scanipc(tmpf2)$collect()

}
