% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_json.R
\name{pl_read_ndjson}
\alias{pl_read_ndjson}
\title{New DataFrame from NDJSON}
\usage{
pl_read_ndjson(
  source,
  ...,
  infer_schema_length = 100,
  batch_size = NULL,
  n_rows = NULL,
  low_memory = FALSE,
  rechunk = FALSE,
  row_index_name = NULL,
  row_index_offset = 0,
  ignore_errors = FALSE
)
}
\arguments{
\item{source}{Path to a file or URL. It is possible to provide multiple paths
provided that all NDJSON files have the same schema. It is not possible to
provide several URLs.}

\item{...}{Ignored.}

\item{infer_schema_length}{Maximum number of rows to read to infer the column
types. If set to 0, all columns will be read as UTF-8. If \code{NULL}, a full
table scan will be done (slow).}

\item{batch_size}{Number of rows that will be processed per thread.}

\item{n_rows}{Maximum number of rows to read.}

\item{low_memory}{Reduce memory usage (will yield a lower performance).}

\item{rechunk}{Reallocate to contiguous memory when all chunks / files are
parsed.}

\item{row_index_name}{If not \code{NULL}, this will insert a row index column with
the given name into the DataFrame.}

\item{row_index_offset}{Offset to start the row index column (only used if
the name is set).}

\item{ignore_errors}{Keep reading the file even if some lines yield errors.
You can also use \code{infer_schema_length = 0} to read all columns as UTF8 to
check which values might cause an issue.}
}
\value{
A DataFrame
}
\description{
Read a file from path into a polars DataFrame.
}
\examples{
if (require("jsonlite", quietly = TRUE)) {
  ndjson_filename = tempfile()
  jsonlite::stream_out(iris, file(ndjson_filename), verbose = FALSE)
  pl$read_ndjson(ndjson_filename)
}
}
