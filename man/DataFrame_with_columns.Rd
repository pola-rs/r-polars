% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_with_columns}
\alias{DataFrame_with_columns}
\alias{with_columns}
\alias{DataFrame_with_column}
\alias{with_column}
\title{Modify/append column(s)}
\usage{
DataFrame_with_columns(...)

DataFrame_with_column(expr)
}
\arguments{
\item{...}{Any expressions or string column name, or same wrapped in a list.
If first and only element is a list, it is unwrapped as a list of args.}

\item{expr}{a single expression or string}
}
\value{
A DataFrame
}
\description{
Add columns or modify existing ones with expressions. This is
the equivalent of \code{dplyr::mutate()} as it keeps unmentioned columns (unlike
\verb{$select()}).
\strong{\verb{$with_column()} function is deprecated, use \verb{$with_columns()} instead.}
}
\examples{
pl$DataFrame(iris)$with_columns(
  pl$col("Sepal.Length")$abs()$alias("abs_SL"),
  (pl$col("Sepal.Length") + 2)$alias("add_2_SL")
)

# same query
l_expr = list(
  pl$col("Sepal.Length")$abs()$alias("abs_SL"),
  (pl$col("Sepal.Length") + 2)$alias("add_2_SL")
)
pl$DataFrame(iris)$with_columns(l_expr)

pl$DataFrame(iris)$with_columns(
  pl$col("Sepal.Length")$abs(), # not named expr will keep name "Sepal.Length"
  SW_add_2 = (pl$col("Sepal.Width") + 2)
)
}
\keyword{DataFrame}
