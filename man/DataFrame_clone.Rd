% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_clone}
\alias{DataFrame_clone}
\title{Clone a DataFrame}
\usage{
DataFrame_clone()
}
\value{
A DataFrame
}
\description{
This makes a very cheap deep copy/clone of an existing
\code{\link[=DataFrame_class]{DataFrame}}. Rarely useful as \code{DataFrame}s are nearly 100\%
immutable. Any modification of a \code{DataFrame} should lead to a clone anyways,
but this can be useful when dealing with attributes (see examples).
}
\examples{
df1 = pl$DataFrame(iris)

# Make a function to take a DataFrame, add an attribute, and return a DataFrame
give_attr = function(data) {
  attr(data, "created_on") = "2024-01-29"
  data
}
df2 = give_attr(df1)

# Problem: the original DataFrame also gets the attribute while it shouldn't!
attributes(df1)

# Use $clone() inside the function to avoid that
give_attr = function(data) {
  data = data$clone()
  attr(data, "created_on") = "2024-01-29"
  data
}
df1 = pl$DataFrame(iris)
df2 = give_attr(df1)

# now, the original DataFrame doesn't get this attribute
attributes(df1)
}
