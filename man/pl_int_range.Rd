% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions__lazy.R
\name{pl_int_range}
\alias{pl_int_range}
\title{Generate a range of integers}
\usage{
pl_int_range(start = 0, end = NULL, step = 1, ..., dtype = pl$Int64)
}
\arguments{
\item{start}{Start of the range (inclusive). Defaults to 0.}

\item{end}{End of the range (exclusive). If \code{NULL} (default), the value of
\code{start} is used and \code{start} is set to 0.}

\item{step}{Step size of the range.}

\item{...}{Not used.}

\item{dtype}{Data type of the range.}
}
\value{
An Expr with the data type specified in \code{dtype} (default is \code{Int64}).
}
\description{
Generate a range of integers
}
\examples{
pl$int_range(0, 3) |>
  as_polars_series()

# "end" can be omitted for shorter syntax
pl$int_range(3) |>
  as_polars_series()

# custom data type
pl$int_range(3, dtype = pl$Int16) |>
  as_polars_series()

# one can use pl$int_range() and pl$len() to create an index column
df = pl$DataFrame(a = c(1, 3, 5), b = c(2, 4, 6))
df$select(
  index = pl$int_range(pl$len(), dtype = pl$UInt32),
  pl$all()
)
}
\seealso{
\code{\link[=pl_int_ranges]{pl$int_ranges()}} to generate a range of integers for
each row of the input columns.
}
