% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_to_list}
\alias{DataFrame_to_list}
\title{Return Polars DataFrame as a list of vectors}
\usage{
DataFrame_to_list(
  unnest_structs = TRUE,
  ...,
  int64_conversion = polars_options()$int64_conversion
)
}
\arguments{
\item{unnest_structs}{Boolean. If \code{TRUE} (default), then \verb{$unnest()} is applied
on any struct column.}

\item{...}{Any args pased to \code{as.data.frame()}.}

\item{int64_conversion}{How should Int64 values be handled when converting a
polars object to R?
\itemize{
\item \code{"double"} (default) converts the integer values to double.
\item \code{"bit64"} uses \code{bit64::as.integer64()} to do the conversion (requires
the package \code{bit64} to be attached).
\item \code{"string"} converts Int64 values to character.
}}
}
\value{
R list of vectors
}
\description{
Return Polars DataFrame as a list of vectors
}
\details{
For simplicity reasons, this implementation relies on unnesting all structs
before exporting to R. If \code{unnest_structs = FALSE}, then \code{struct} columns
will be returned as nested lists, where each row is a list of values. Such a
structure is not very typical or efficient in R.
}
\examples{
pl$DataFrame(iris)$to_list()
}
\keyword{DataFrame}
