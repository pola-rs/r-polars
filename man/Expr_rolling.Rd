% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr__expr.R
\name{Expr_rolling}
\alias{Expr_rolling}
\title{Create rolling groups based on a time or numeric column}
\usage{
Expr_rolling(
  index_column,
  period,
  offset = NULL,
  closed = "right",
  check_sorted = TRUE
)
}
\arguments{
\item{index_column}{Column used to group based on the time window. Often of
type Date/Datetime. This column must be sorted in ascending order. If this
column represents an index, it has to be either Int32 or Int64. Note that
Int32 gets temporarily cast to Int64, so if performance matters use an Int64
column.}

\item{period}{Length of the window, must be non-negative.}

\item{offset}{Offset of the window. Default is \code{-period}.}

\item{closed}{Define which sides of the temporal interval are closed
(inclusive). This can be either \code{"left"}, \code{"right"}, \code{"both"} or \code{"none"}.}

\item{check_sorted}{Check whether data is actually sorted. Checking it is
expensive so if you are sure the data within the \code{index_column} is sorted, you
can set this to \code{FALSE} but note that if the data actually is unsorted, it
will lead to incorrect output.}
}
\value{
Expr
}
\description{
If you have a time series \verb{<t_0, t_1, ..., t_n>}, then by default the windows
created will be:
\itemize{
\item (t_0 - period, t_0]
\item (t_1 - period, t_1]
\item …
\item (t_n - period, t_n]
}

whereas if you pass a non-default offset, then the windows will be:
\itemize{
\item (t_0 + offset, t_0 + offset + period]
\item (t_1 + offset, t_1 + offset + period]
\item …
\item (t_n + offset, t_n + offset + period]
}
}
\details{
The period and offset arguments are created either from a timedelta, or by
using the following string language:
\itemize{
\item 1ns (1 nanosecond)
\item 1us (1 microsecond)
\item 1ms (1 millisecond)
\item 1s (1 second)
\item 1m (1 minute)
\item 1h (1 hour)
\item 1d (1 calendar day)
\item 1w (1 calendar week)
\item 1mo (1 calendar month)
\item 1q (1 calendar quarter)
\item 1y (1 calendar year)
\item 1i (1 index count)
}

Or combine them: "3d12h4m25s" # 3 days, 12 hours, 4 minutes, and 25 seconds

By "calendar day", we mean the corresponding time on the next day (which may
not be 24 hours, due to daylight savings). Similarly for "calendar week",
"calendar month", "calendar quarter", and "calendar year".

In case of a rolling operation on an integer column, the windows are defined
by:
\itemize{
\item "1i" # length 1
\item "10i" # length 10
}
}
\examples{
# create a DataFrame with a Datetime column and an f64 column
dates = c(
  "2020-01-01 13:45:48", "2020-01-01 16:42:13", "2020-01-01 16:45:09",
  "2020-01-02 18:12:48", "2020-01-03 19:45:32", "2020-01-08 23:16:43"
)

df = pl$DataFrame(dt = dates, a = c(3, 7, 5, 9, 2, 1))$
  with_columns(
  pl$col("dt")$str$strptime(pl$Datetime(tu = "us"), format = "\%Y-\%m-\%d \%H:\%M:\%S")$set_sorted()
)

df$with_columns(
  sum_a = pl$sum("a")$rolling(index_column = "dt", period = "2d"),
  min_a = pl$min("a")$rolling(index_column = "dt", period = "2d"),
  max_a = pl$max("a")$rolling(index_column = "dt", period = "2d")
)

# we can use "offset" to change the start of the window period. Here, with
# offset = "1d", we start the window one day after the value in "dt", and
# then we add a 2-day window relative to the window start.
df$with_columns(
  sum_a_offset1 = pl$sum("a")$rolling(index_column = "dt", period = "2d", offset = "1d")
)
}
