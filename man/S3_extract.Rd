% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3_methods.R
\name{[.RPolarsDataFrame}
\alias{[.RPolarsDataFrame}
\alias{[.RPolarsLazyFrame}
\alias{[.RPolarsSeries}
\title{Extract Parts of a Polars Object}
\usage{
\method{[}{RPolarsDataFrame}(x, i, j, drop = TRUE)

\method{[}{RPolarsLazyFrame}(x, i, j, drop = TRUE)

\method{[}{RPolarsSeries}(x, i)
}
\arguments{
\item{x}{A \link[=DataFrame_class]{DataFrame}, \link[=LazyFrame_class]{LazyFrame}, or \link[=Series_class]{Series}}

\item{i}{Rows to select. Integer vector, logical vector, or an \link[=Expr_class]{Expression}.}

\item{j}{Columns to select. Integer vector, logical vector, character vector, or an \link[=Expr_class]{Expression}.
For LazyFrames, only an Expression can be used.}

\item{drop}{Convert to a Polars Series if only one column is selected.
For LazyFrames, if the result has one column and \code{drop = TRUE}, an error will occur.}
}
\description{
Mimics the behavior of [\code{x[i, j, drop = TRUE]}][Extract] for \link{data.frame} or R vector.
}
\details{
\verb{<Series>[i]} is equivalent to \verb{pl$select(<Series>)[i, , drop = TRUE]}.
}
\examples{
df = pl$DataFrame(data.frame(a = 1:3, b = letters[1:3]))
lf = df$lazy()

# Select a row
df[1, ]

# If only `i` is specified, it is treated as `j`
# Select a column
df[1]

# Select a column by name (and convert to a Series)
df[, "b"]

# Can use Expression for filtering and column selection
lf[pl$col("a") >= 2, pl$col("b")$alias("new"), drop = FALSE] |>
  as.data.frame()
}
\seealso{
\code{\link[=DataFrame_select]{<DataFrame>$select()}},
\code{\link[=LazyFrame_select]{<LazyFrame>$select()}},
\code{\link[=DataFrame_filter]{<DataFrame>$filter()}},
\code{\link[=LazyFrame_filter]{<LazyFrame>$filter()}}
}
