% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions__lazy.R
\name{pl_duration}
\alias{pl_duration}
\title{Create polars Duration from distinct time components}
\usage{
pl_duration(
  ...,
  weeks = NULL,
  days = NULL,
  hours = NULL,
  minutes = NULL,
  seconds = NULL,
  milliseconds = NULL,
  microseconds = NULL,
  nanoseconds = NULL,
  time_unit = "us"
)
}
\arguments{
\item{...}{Not used.}

\item{weeks}{Number of weeks to add. Expr or something coercible to an Expr.
Strings are parsed as column names. \emph{Same thing for argument \code{days} to
\code{nanoseconds}}.}

\item{days}{Number of days to add.}

\item{hours}{Number of hours to add.}

\item{minutes}{Number of minutes to add.}

\item{seconds}{Number of seconds to add.}

\item{milliseconds}{Number of milliseconds to add.}

\item{microseconds}{Number of microseconds to add.}

\item{nanoseconds}{Number of nanoseconds to add.}

\item{time_unit}{Time unit of the resulting expression.}
}
\value{
Expr
}
\description{
Create polars Duration from distinct time components
}
\details{
A duration represents a fixed amount of time. For example,
\code{pl$duration(days = 1)} means "exactly 24 hours". By contrast,
\code{Expr$dt$offset_by('1d')} means "1 calendar day", which could sometimes be 23
hours or 25 hours depending on Daylight Savings Time. For non-fixed durations
such as "calendar month" or "calendar day", please use \code{Expr$dt$offset_by()}
instead.
}
\examples{
test = pl$DataFrame(
  dt = c(
    "2022-01-01 00:00:00",
    "2022-01-02 00:00:00"
  ),
  add = 1:2
)$with_columns(
  pl$col("dt")$str$strptime(pl$Datetime("us"), format = NULL)
)

test$with_columns(
  (pl$col("dt") + pl$duration(weeks = "add"))$alias("add_weeks"),
  (pl$col("dt") + pl$duration(days = "add"))$alias("add_days"),
  (pl$col("dt") + pl$duration(seconds = "add"))$alias("add_seconds"),
  (pl$col("dt") + pl$duration(milliseconds = "add"))$alias("add_millis"),
  (pl$col("dt") + pl$duration(hours = "add"))$alias("add_hours")
)

# we can also pass an Expr
test$with_columns(
  (pl$col("dt") + pl$duration(weeks = pl$col("add") + 1))$alias("add_weeks"),
  (pl$col("dt") + pl$duration(days = pl$col("add") + 1))$alias("add_days"),
  (pl$col("dt") + pl$duration(seconds = pl$col("add") + 1))$alias("add_seconds"),
  (pl$col("dt") + pl$duration(milliseconds = pl$col("add") + 1))$alias("add_millis"),
  (pl$col("dt") + pl$duration(hours = pl$col("add") + 1))$alias("add_hours")
)
}
