% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe__frame.R
\name{DataFrame_explode}
\alias{DataFrame_explode}
\title{Explode columns containing a list of values}
\usage{
DataFrame_explode(...)
}
\arguments{
\item{...}{Column(s) to be exploded as individual \verb{Into<Expr>} or list/vector
of \verb{Into<Expr>}. In a handful of places in rust-polars, only the plain variant
\code{Expr::Column} is accepted. This is currenly one of such places. Therefore
\code{pl$col("name")} and \code{pl$all()} is allowed, not \code{pl$col("name")$alias("newname")}.
\code{"name"} is implicitly converted to \code{pl$col("name")}.}
}
\value{
DataFrame
}
\description{
Explode columns containing a list of values
}
\examples{
df = pl$DataFrame(
  letters = c("aa", "aa", "bb", "cc"),
  numbers = list(1, c(2, 3), c(4, 5), c(6, 7, 8)),
  numbers_2 = list(0, c(1, 2), c(3, 4), c(5, 6, 7)) # same structure as numbers
)
df

# explode a single column, append others
df$explode("numbers")

# it is also possible to explode a character column to have one letter per row
df$explode("letters")

# explode two columns of same nesting structure, by names or the common dtype
# "List(Float64)"
df$explode("numbers", "numbers_2")
df$explode(pl$col(pl$List(pl$Float64)))
}
\keyword{DataFrame}
