# Generated by roxygen2: do not edit by hand

S3method("!",Expr)
S3method("!=",Expr)
S3method("!=",RPolarsDataType)
S3method("!=",Series)
S3method("$",DataFrame)
S3method("$",DataTypeVector)
S3method("$",Expr)
S3method("$",ExprArrNameSpace)
S3method("$",ExprBinNameSpace)
S3method("$",ExprCatNameSpace)
S3method("$",ExprDTNameSpace)
S3method("$",ExprMetaNameSpace)
S3method("$",ExprStrNameSpace)
S3method("$",ExprStructNameSpace)
S3method("$",FeatureInfo)
S3method("$",GroupBy)
S3method("$",LazyFrame)
S3method("$",LazyGroupBy)
S3method("$",PolarsBackgroundHandle)
S3method("$",ProtoExprArray)
S3method("$",RField)
S3method("$",RNullValues)
S3method("$",RPolarsDataType)
S3method("$",RPolarsErr)
S3method("$",Series)
S3method("$",VecDataFrame)
S3method("$",When)
S3method("$",WhenThen)
S3method("$",WhenThenThen)
S3method("$",pl_polars_env)
S3method("$",private_polars_env)
S3method("$<-",DataFrame)
S3method("$<-",RField)
S3method("&",Expr)
S3method("*",Expr)
S3method("*",Series)
S3method("+",Expr)
S3method("+",Series)
S3method("-",Expr)
S3method("-",Series)
S3method("/",Expr)
S3method("/",Series)
S3method("<",Expr)
S3method("<",Series)
S3method("<=",Expr)
S3method("<=",Series)
S3method("==",Expr)
S3method("==",RPolarsDataType)
S3method("==",Series)
S3method(">",Expr)
S3method(">",Series)
S3method(">=",Expr)
S3method(">=",Series)
S3method("[",DataFrame)
S3method("[",ExprArrNameSpace)
S3method("[",LazyFrame)
S3method("[[",DataFrame)
S3method("[[",DataTypeVector)
S3method("[[",Expr)
S3method("[[",FeatureInfo)
S3method("[[",GroupBy)
S3method("[[",LazyFrame)
S3method("[[",LazyGroupBy)
S3method("[[",PolarsBackgroundHandle)
S3method("[[",ProtoExprArray)
S3method("[[",RField)
S3method("[[",RNullValues)
S3method("[[",RPolarsDataType)
S3method("[[",RPolarsErr)
S3method("[[",Series)
S3method("[[",VecDataFrame)
S3method("[[",When)
S3method("[[",WhenThen)
S3method("[[",WhenThenThen)
S3method("^",Expr)
S3method("|",Expr)
S3method(.DollarNames,DataFrame)
S3method(.DollarNames,Expr)
S3method(.DollarNames,GroupBy)
S3method(.DollarNames,LazyFrame)
S3method(.DollarNames,PolarsBackgroundHandle)
S3method(.DollarNames,RField)
S3method(.DollarNames,RPolarsErr)
S3method(.DollarNames,Series)
S3method(.DollarNames,VecDataFrame)
S3method(.DollarNames,When)
S3method(.DollarNames,WhenThen)
S3method(.DollarNames,WhenThenThen)
S3method(.DollarNames,method_environment)
S3method(.DollarNames,polars_option_list)
S3method(as.character,RPolarsErr)
S3method(as.character,Series)
S3method(as.data.frame,DataFrame)
S3method(as.data.frame,LazyFrame)
S3method(as.list,Expr)
S3method(as.matrix,DataFrame)
S3method(as.matrix,LazyFrame)
S3method(as.vector,Series)
S3method(c,Series)
S3method(dim,DataFrame)
S3method(dim,LazyFrame)
S3method(dimnames,DataFrame)
S3method(dimnames,LazyFrame)
S3method(head,DataFrame)
S3method(head,LazyFrame)
S3method(length,DataFrame)
S3method(length,LazyFrame)
S3method(length,Series)
S3method(max,DataFrame)
S3method(max,LazyFrame)
S3method(max,Series)
S3method(mean,DataFrame)
S3method(mean,LazyFrame)
S3method(median,DataFrame)
S3method(median,LazyFrame)
S3method(min,DataFrame)
S3method(min,LazyFrame)
S3method(min,Series)
S3method(na.omit,DataFrame)
S3method(na.omit,LazyFrame)
S3method(names,DataFrame)
S3method(names,LazyFrame)
S3method(print,DataFrame)
S3method(print,Expr)
S3method(print,GroupBy)
S3method(print,LazyFrame)
S3method(print,LazyGroupBy)
S3method(print,PTime)
S3method(print,PolarsBackgroundHandle)
S3method(print,RField)
S3method(print,RPolarsDataType)
S3method(print,RPolarsErr)
S3method(print,Series)
S3method(print,When)
S3method(print,WhenThen)
S3method(print,WhenThenThen)
S3method(print,polars_info)
S3method(print,polars_option_list)
S3method(row.names,DataFrame)
S3method(sum,DataFrame)
S3method(sum,LazyFrame)
S3method(sum,Series)
S3method(tail,DataFrame)
S3method(tail,LazyFrame)
S3method(unique,DataFrame)
S3method(unique,LazyFrame)
export("%**%")
export("%**%.Expr")
export(.pr)
export(knit_print.DataFrame)
export(pl)
importFrom(stats,median)
importFrom(stats,na.omit)
importFrom(utils,.DollarNames)
importFrom(utils,capture.output)
importFrom(utils,download.file)
importFrom(utils,getFromNamespace)
importFrom(utils,globalVariables)
importFrom(utils,head)
importFrom(utils,str)
importFrom(utils,tail)
useDynLib(polars, .registration = TRUE)
