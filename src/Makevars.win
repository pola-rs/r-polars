TARGET ?= $(subst 64,x86_64,$(subst 32,i686,$(WIN)))-pc-windows-gnu
LIBR_POLARS_PROFILE ?= release
LIBR_POLARS_FEATURES ?=

LIBNAME = libr_polars.a
TARGET_DIR = $(CURDIR)/rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(LIBR_POLARS_PROFILE)
STATLIB = $(LIBDIR)/$(LIBNAME)
PKG_LIBS = -L$(LIBDIR) -lr_polars -lws2_32 -ladvapi32 -luserenv -lbcrypt -lole32 -lntdll -lpsapi -liphlpapi -lpdh -lpowrprof -loleaut32 -lnetapi32 -lsecur32 -t

# Rtools42 doesn't have the linker in the location that cargo expects, so we
# need to overwrite it via configuration.
CARGO_LINKER = x86_64-w64-mingw32.static.posix-gcc.exe

all: C_clean

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo

$(STATLIB):
	# `rustc` adds `-lgcc_eh` flags to the compiler, but Rtools' GCC doesn't have
	# `libgcc_eh` due to the compilation settings. So, in order to please the
	# compiler, we need to add empty `libgcc_eh` to the library search paths.
	#
	# For more details, please refer to
	# https://github.com/r-windows/rtools-packages/blob/2407b23f1e0925bbb20a4162c963600105236318/mingw-w64-gcc/PKGBUILD#L313-L316
	mkdir -p "$(TARGET_DIR)/libgcc_mock"
	touch "$(TARGET_DIR)/libgcc_mock/libgcc_eh.a"

	if [ -f "$(CURDIR)/../tools/$(LIBNAME)" ]; then \
		mkdir -p "$(LIBDIR)" ; \
		mv "$(CURDIR)/../tools/$(LIBNAME)" "$(STATLIB)" ; \
		exit 0; \
	fi && \
	if [ "true" != "true" ]; then \
		export CARGO_HOME="$(CARGOTMP)"; \
		export CARGO_BUILD_JOBS=2; \
	fi && \
		export CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER="$(CARGO_LINKER)" && \
		export LIBRARY_PATH="$${LIBRARY_PATH};$(TARGET_DIR)/libgcc_mock" && \
		cargo build --lib --manifest-path="$(CURDIR)/rust/Cargo.toml" --target-dir "$(TARGET_DIR)" --target="$(TARGET)" \
			--profile="$(LIBR_POLARS_PROFILE)" --features="$(LIBR_POLARS_FEATURES)"

	if [ "true" != "true" ]; then \
		rm -Rf "$(CARGOTMP)" "$(LIBDIR)/build"; \
	fi

C_clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)"

clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)" "$(TARGET_DIR)"
