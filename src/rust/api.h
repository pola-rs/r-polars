SEXP savvy_all_horizontal__ffi(SEXP c_arg__exprs);
SEXP savvy_any_horizontal__ffi(SEXP c_arg__exprs);
SEXP savvy_arg_sort_by__ffi(SEXP c_arg__by, SEXP c_arg__descending, SEXP c_arg__nulls_last, SEXP c_arg__maintain_order, SEXP c_arg__multithreaded);
SEXP savvy_arg_where__ffi(SEXP c_arg__condition);
SEXP savvy_as_struct__ffi(SEXP c_arg__exprs);
SEXP savvy_coalesce__ffi(SEXP c_arg__exprs);
SEXP savvy_col__ffi(SEXP c_arg__name);
SEXP savvy_cols__ffi(SEXP c_arg__names);
SEXP savvy_concat_df__ffi(SEXP c_arg__dfs);
SEXP savvy_concat_df_diagonal__ffi(SEXP c_arg__dfs);
SEXP savvy_concat_df_horizontal__ffi(SEXP c_arg__dfs);
SEXP savvy_concat_lf__ffi(SEXP c_arg__lfs, SEXP c_arg__rechunk, SEXP c_arg__parallel, SEXP c_arg__to_supertypes);
SEXP savvy_concat_lf_diagonal__ffi(SEXP c_arg__lfs, SEXP c_arg__rechunk, SEXP c_arg__parallel, SEXP c_arg__to_supertypes);
SEXP savvy_concat_lf_horizontal__ffi(SEXP c_arg__lfs, SEXP c_arg__parallel);
SEXP savvy_concat_list__ffi(SEXP c_arg__s);
SEXP savvy_concat_series__ffi(SEXP c_arg__series);
SEXP savvy_concat_str__ffi(SEXP c_arg__s, SEXP c_arg__separator, SEXP c_arg__ignore_nulls);
SEXP savvy_date_range__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__interval, SEXP c_arg__closed);
SEXP savvy_date_ranges__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__interval, SEXP c_arg__closed);
SEXP savvy_datetime__ffi(SEXP c_arg__year, SEXP c_arg__month, SEXP c_arg__day, SEXP c_arg__time_unit, SEXP c_arg__ambiguous, SEXP c_arg__hour, SEXP c_arg__minute, SEXP c_arg__second, SEXP c_arg__microsecond, SEXP c_arg__time_zone);
SEXP savvy_datetime_range__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__every, SEXP c_arg__closed, SEXP c_arg__time_unit, SEXP c_arg__time_zone);
SEXP savvy_datetime_ranges__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__every, SEXP c_arg__closed, SEXP c_arg__time_unit, SEXP c_arg__time_zone);
SEXP savvy_duration__ffi(SEXP c_arg__time_unit, SEXP c_arg__weeks, SEXP c_arg__days, SEXP c_arg__hours, SEXP c_arg__minutes, SEXP c_arg__seconds, SEXP c_arg__milliseconds, SEXP c_arg__microseconds, SEXP c_arg__nanoseconds);
SEXP savvy_feature_nightly_enabled__ffi(void);
SEXP savvy_field__ffi(SEXP c_arg__names);
SEXP savvy_int_range__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__step, SEXP c_arg__dtype);
SEXP savvy_int_ranges__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__step, SEXP c_arg__dtype);
SEXP savvy_len__ffi(void);
SEXP savvy_lit_bin_from_raw__ffi(SEXP c_arg__value);
SEXP savvy_lit_from_series__ffi(SEXP c_arg__value);
SEXP savvy_lit_from_series_first__ffi(SEXP c_arg__value);
SEXP savvy_lit_null__ffi(void);
SEXP savvy_max_horizontal__ffi(SEXP c_arg__exprs);
SEXP savvy_mean_horizontal__ffi(SEXP c_arg__exprs, SEXP c_arg__ignore_nulls);
SEXP savvy_min_horizontal__ffi(SEXP c_arg__exprs);
SEXP savvy_repeat___ffi(SEXP c_arg__value, SEXP c_arg__n, SEXP c_arg__dtype);
SEXP savvy_rust_polars_version__ffi(void);
SEXP savvy_sum_horizontal__ffi(SEXP c_arg__exprs, SEXP c_arg__ignore_nulls);
SEXP savvy_thread_pool_size__ffi(void);
SEXP savvy_time_range__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__every, SEXP c_arg__closed);
SEXP savvy_time_ranges__ffi(SEXP c_arg__start, SEXP c_arg__end, SEXP c_arg__every, SEXP c_arg__closed);
SEXP savvy_when__ffi(SEXP c_arg__condition);

// methods and associated functions for PlRCategories
SEXP savvy_PlRCategories_cat_to_str__ffi(SEXP self__, SEXP c_arg__cat);
SEXP savvy_PlRCategories_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRCategories_get_cat__ffi(SEXP self__, SEXP c_arg__s);
SEXP savvy_PlRCategories_global_categories__ffi(void);
SEXP savvy_PlRCategories_hash__ffi(SEXP self__);
SEXP savvy_PlRCategories_init__ffi(SEXP c_arg__name, SEXP c_arg__namespace, SEXP c_arg__physical);
SEXP savvy_PlRCategories_is_global__ffi(SEXP self__);
SEXP savvy_PlRCategories_name__ffi(SEXP self__);
SEXP savvy_PlRCategories_namespace__ffi(SEXP self__);
SEXP savvy_PlRCategories_physical__ffi(SEXP self__);
SEXP savvy_PlRCategories_random__ffi(SEXP c_arg__namespace, SEXP c_arg__physical);

// methods and associated functions for PlRChainedThen
SEXP savvy_PlRChainedThen_otherwise__ffi(SEXP self__, SEXP c_arg__statement);
SEXP savvy_PlRChainedThen_when__ffi(SEXP self__, SEXP c_arg__condition);

// methods and associated functions for PlRChainedWhen
SEXP savvy_PlRChainedWhen_then__ffi(SEXP self__, SEXP c_arg__statement);

// methods and associated functions for PlRDataFrame
SEXP savvy_PlRDataFrame_as_str__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_clear__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_clone__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_columns__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_deserialize_binary__ffi(SEXP c_arg__data);
SEXP savvy_PlRDataFrame_dtypes__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_equals__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__null_equal);
SEXP savvy_PlRDataFrame_gather_with_series__ffi(SEXP self__, SEXP c_arg__indices);
SEXP savvy_PlRDataFrame_get_column__ffi(SEXP self__, SEXP c_arg__name);
SEXP savvy_PlRDataFrame_get_column_index__ffi(SEXP self__, SEXP c_arg__name);
SEXP savvy_PlRDataFrame_get_columns__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_hash_rows__ffi(SEXP self__, SEXP c_arg__seed, SEXP c_arg__seed_1, SEXP c_arg__seed_2, SEXP c_arg__seed_3);
SEXP savvy_PlRDataFrame_head__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRDataFrame_height__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_init__ffi(SEXP c_arg__columns);
SEXP savvy_PlRDataFrame_is_duplicated__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_is_empty__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_is_unique__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_lazy__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_n_chunks__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_partition_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__maintain_order, SEXP c_arg__include_key);
SEXP savvy_PlRDataFrame_pivot_expr__ffi(SEXP self__, SEXP c_arg__on, SEXP c_arg__maintain_order, SEXP c_arg__sort_columns, SEXP c_arg__aggregate_expr, SEXP c_arg__separator, SEXP c_arg__index, SEXP c_arg__values);
SEXP savvy_PlRDataFrame_read_ipc_stream__ffi(SEXP c_arg__source, SEXP c_arg__row_index_offset, SEXP c_arg__rechunk, SEXP c_arg__columns, SEXP c_arg__projection, SEXP c_arg__n_rows, SEXP c_arg__row_index_name);
SEXP savvy_PlRDataFrame_rechunk__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_sample_frac__ffi(SEXP self__, SEXP c_arg__frac, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRDataFrame_sample_n__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRDataFrame_serialize_binary__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_set_column_names__ffi(SEXP self__, SEXP c_arg__names);
SEXP savvy_PlRDataFrame_shape__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__length);
SEXP savvy_PlRDataFrame_tail__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRDataFrame_to_dummies__ffi(SEXP self__, SEXP c_arg__drop_first, SEXP c_arg__drop_nulls, SEXP c_arg__columns, SEXP c_arg__separator);
SEXP savvy_PlRDataFrame_to_series__ffi(SEXP self__, SEXP c_arg__index);
SEXP savvy_PlRDataFrame_to_struct__ffi(SEXP self__, SEXP c_arg__name);
SEXP savvy_PlRDataFrame_transpose__ffi(SEXP self__, SEXP c_arg__column_names, SEXP c_arg__keep_names_as);
SEXP savvy_PlRDataFrame_unpivot__ffi(SEXP self__, SEXP c_arg__on, SEXP c_arg__index, SEXP c_arg__value_name, SEXP c_arg__variable_name);
SEXP savvy_PlRDataFrame_width__ffi(SEXP self__);
SEXP savvy_PlRDataFrame_with_row_index__ffi(SEXP self__, SEXP c_arg__name, SEXP c_arg__offset);
SEXP savvy_PlRDataFrame_write_json__ffi(SEXP self__, SEXP c_arg__path);

// methods and associated functions for PlRDataType
SEXP savvy_PlRDataType__get_datatype_fields__ffi(SEXP self__);
SEXP savvy_PlRDataType__get_dtype_names__ffi(SEXP self__);
SEXP savvy_PlRDataType_as_str__ffi(SEXP self__, SEXP c_arg__abbreviated);
SEXP savvy_PlRDataType_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRDataType_infer_supertype__ffi(SEXP c_arg__dtypes, SEXP c_arg__strict);
SEXP savvy_PlRDataType_max__ffi(SEXP self__);
SEXP savvy_PlRDataType_min__ffi(SEXP self__);
SEXP savvy_PlRDataType_ne__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRDataType_new_array__ffi(SEXP c_arg__inner, SEXP c_arg__shape);
SEXP savvy_PlRDataType_new_categorical__ffi(SEXP c_arg__categories);
SEXP savvy_PlRDataType_new_datetime__ffi(SEXP c_arg__time_unit, SEXP c_arg__time_zone);
SEXP savvy_PlRDataType_new_decimal__ffi(SEXP c_arg__scale, SEXP c_arg__precision);
SEXP savvy_PlRDataType_new_duration__ffi(SEXP c_arg__time_unit);
SEXP savvy_PlRDataType_new_enum__ffi(SEXP c_arg__categories);
SEXP savvy_PlRDataType_new_from_name__ffi(SEXP c_arg__name);
SEXP savvy_PlRDataType_new_list__ffi(SEXP c_arg__inner);
SEXP savvy_PlRDataType_new_struct__ffi(SEXP c_arg__fields);

// methods and associated functions for PlRExpr
SEXP savvy_PlRExpr_abs__ffi(SEXP self__);
SEXP savvy_PlRExpr_add__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_agg_groups__ffi(SEXP self__);
SEXP savvy_PlRExpr_alias__ffi(SEXP self__, SEXP c_arg__name);
SEXP savvy_PlRExpr_all__ffi(SEXP self__, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_and__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_any__ffi(SEXP self__, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_append__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__upcast);
SEXP savvy_PlRExpr_approx_n_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_arccos__ffi(SEXP self__);
SEXP savvy_PlRExpr_arccosh__ffi(SEXP self__);
SEXP savvy_PlRExpr_arcsin__ffi(SEXP self__);
SEXP savvy_PlRExpr_arcsinh__ffi(SEXP self__);
SEXP savvy_PlRExpr_arctan__ffi(SEXP self__);
SEXP savvy_PlRExpr_arctan2__ffi(SEXP self__, SEXP c_arg__y);
SEXP savvy_PlRExpr_arctanh__ffi(SEXP self__);
SEXP savvy_PlRExpr_arg_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_arg_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_arg_sort__ffi(SEXP self__, SEXP c_arg__descending, SEXP c_arg__nulls_last);
SEXP savvy_PlRExpr_arg_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_all__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_any__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_arg_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_arg_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_contains__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__nulls_equal);
SEXP savvy_PlRExpr_arr_count_matches__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_arr_get__ffi(SEXP self__, SEXP c_arg__index, SEXP c_arg__null_on_oob);
SEXP savvy_PlRExpr_arr_join__ffi(SEXP self__, SEXP c_arg__separator, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_arr_len__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_median__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_n_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_reverse__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_shift__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRExpr_arr_sort__ffi(SEXP self__, SEXP c_arg__descending, SEXP c_arg__nulls_last);
SEXP savvy_PlRExpr_arr_std__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_arr_sum__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_to_list__ffi(SEXP self__);
SEXP savvy_PlRExpr_arr_to_struct__ffi(SEXP self__, SEXP c_arg__name_gen);
SEXP savvy_PlRExpr_arr_unique__ffi(SEXP self__, SEXP c_arg__maintain_order);
SEXP savvy_PlRExpr_arr_var__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_as_str__ffi(SEXP self__);
SEXP savvy_PlRExpr_bin_base64_decode__ffi(SEXP self__, SEXP c_arg__strict);
SEXP savvy_PlRExpr_bin_base64_encode__ffi(SEXP self__);
SEXP savvy_PlRExpr_bin_contains__ffi(SEXP self__, SEXP c_arg__literal);
SEXP savvy_PlRExpr_bin_ends_with__ffi(SEXP self__, SEXP c_arg__suffix);
SEXP savvy_PlRExpr_bin_hex_decode__ffi(SEXP self__, SEXP c_arg__strict);
SEXP savvy_PlRExpr_bin_hex_encode__ffi(SEXP self__);
SEXP savvy_PlRExpr_bin_size_bytes__ffi(SEXP self__);
SEXP savvy_PlRExpr_bin_starts_with__ffi(SEXP self__, SEXP c_arg__prefix);
SEXP savvy_PlRExpr_bitwise_and__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_count_ones__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_count_zeros__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_leading_ones__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_leading_zeros__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_or__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_trailing_ones__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_trailing_zeros__ffi(SEXP self__);
SEXP savvy_PlRExpr_bitwise_xor__ffi(SEXP self__);
SEXP savvy_PlRExpr_bottom_k__ffi(SEXP self__, SEXP c_arg__k);
SEXP savvy_PlRExpr_bottom_k_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__k, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cast__ffi(SEXP self__, SEXP c_arg__dtype, SEXP c_arg__strict, SEXP c_arg__wrap_numerical);
SEXP savvy_PlRExpr_cat_get_categories__ffi(SEXP self__);
SEXP savvy_PlRExpr_cbrt__ffi(SEXP self__);
SEXP savvy_PlRExpr_ceil__ffi(SEXP self__);
SEXP savvy_PlRExpr_clip__ffi(SEXP self__, SEXP c_arg__min, SEXP c_arg__max);
SEXP savvy_PlRExpr_compute_tree_format__ffi(SEXP self__, SEXP c_arg__as_dot, SEXP c_arg__schema);
SEXP savvy_PlRExpr_cos__ffi(SEXP self__);
SEXP savvy_PlRExpr_cosh__ffi(SEXP self__);
SEXP savvy_PlRExpr_cot__ffi(SEXP self__);
SEXP savvy_PlRExpr_count__ffi(SEXP self__);
SEXP savvy_PlRExpr_cum_count__ffi(SEXP self__, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cum_max__ffi(SEXP self__, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cum_min__ffi(SEXP self__, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cum_prod__ffi(SEXP self__, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cum_sum__ffi(SEXP self__, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_cumulative_eval__ffi(SEXP self__, SEXP c_arg__expr, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_cut__ffi(SEXP self__, SEXP c_arg__breaks, SEXP c_arg__left_closed, SEXP c_arg__include_breaks, SEXP c_arg__labels);
SEXP savvy_PlRExpr_degrees__ffi(SEXP self__);
SEXP savvy_PlRExpr_deserialize_binary__ffi(SEXP c_arg__data);
SEXP savvy_PlRExpr_deserialize_json__ffi(SEXP c_arg__data);
SEXP savvy_PlRExpr_diff__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__null_behavior);
SEXP savvy_PlRExpr_div__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_dot__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_drop_nans__ffi(SEXP self__);
SEXP savvy_PlRExpr_drop_nulls__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_add_business_days__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__week_mask, SEXP c_arg__holidays, SEXP c_arg__roll);
SEXP savvy_PlRExpr_dt_base_utc_offset__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_cast_time_unit__ffi(SEXP self__, SEXP c_arg__time_unit);
SEXP savvy_PlRExpr_dt_century__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_combine__ffi(SEXP self__, SEXP c_arg__time, SEXP c_arg__time_unit);
SEXP savvy_PlRExpr_dt_convert_time_zone__ffi(SEXP self__, SEXP c_arg__time_zone);
SEXP savvy_PlRExpr_dt_date__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_day__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_dst_offset__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_epoch_seconds__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_hour__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_is_leap_year__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_iso_year__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_microsecond__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_millennium__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_millisecond__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_minute__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_month__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_month_end__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_month_start__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_nanosecond__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_offset_by__ffi(SEXP self__, SEXP c_arg__by);
SEXP savvy_PlRExpr_dt_ordinal_day__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_quarter__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_replace_time_zone__ffi(SEXP self__, SEXP c_arg__ambiguous, SEXP c_arg__non_existent, SEXP c_arg__time_zone);
SEXP savvy_PlRExpr_dt_round__ffi(SEXP self__, SEXP c_arg__every);
SEXP savvy_PlRExpr_dt_second__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_time__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_timestamp__ffi(SEXP self__, SEXP c_arg__time_unit);
SEXP savvy_PlRExpr_dt_to_string__ffi(SEXP self__, SEXP c_arg__format);
SEXP savvy_PlRExpr_dt_total_days__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_hours__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_microseconds__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_milliseconds__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_minutes__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_nanoseconds__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_total_seconds__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_truncate__ffi(SEXP self__, SEXP c_arg__every);
SEXP savvy_PlRExpr_dt_week__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_weekday__ffi(SEXP self__);
SEXP savvy_PlRExpr_dt_with_time_unit__ffi(SEXP self__, SEXP c_arg__time_unit);
SEXP savvy_PlRExpr_dt_year__ffi(SEXP self__);
SEXP savvy_PlRExpr_entropy__ffi(SEXP self__, SEXP c_arg__base, SEXP c_arg__normalize);
SEXP savvy_PlRExpr_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_eq_missing__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_ewm_mean__ffi(SEXP self__, SEXP c_arg__alpha, SEXP c_arg__adjust, SEXP c_arg__min_samples, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_ewm_mean_by__ffi(SEXP self__, SEXP c_arg__times, SEXP c_arg__half_life);
SEXP savvy_PlRExpr_ewm_std__ffi(SEXP self__, SEXP c_arg__alpha, SEXP c_arg__adjust, SEXP c_arg__bias, SEXP c_arg__min_samples, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_ewm_var__ffi(SEXP self__, SEXP c_arg__alpha, SEXP c_arg__adjust, SEXP c_arg__bias, SEXP c_arg__min_samples, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_exp__ffi(SEXP self__);
SEXP savvy_PlRExpr_explode__ffi(SEXP self__);
SEXP savvy_PlRExpr_extend_constant__ffi(SEXP self__, SEXP c_arg__value, SEXP c_arg__n);
SEXP savvy_PlRExpr_fill_nan__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_fill_null__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_fill_null_with_strategy__ffi(SEXP self__, SEXP c_arg__strategy, SEXP c_arg__limit);
SEXP savvy_PlRExpr_filter__ffi(SEXP self__, SEXP c_arg__predicate);
SEXP savvy_PlRExpr_first__ffi(SEXP self__);
SEXP savvy_PlRExpr_floor__ffi(SEXP self__);
SEXP savvy_PlRExpr_floor_div__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_gather__ffi(SEXP self__, SEXP c_arg__idx);
SEXP savvy_PlRExpr_gather_every__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__offset);
SEXP savvy_PlRExpr_get__ffi(SEXP self__, SEXP c_arg__idx);
SEXP savvy_PlRExpr_gt__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_gt_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_hash__ffi(SEXP self__, SEXP c_arg__seed, SEXP c_arg__seed_1, SEXP c_arg__seed_2, SEXP c_arg__seed_3);
SEXP savvy_PlRExpr_hist__ffi(SEXP self__, SEXP c_arg__include_category, SEXP c_arg__include_breakpoint, SEXP c_arg__bin_count, SEXP c_arg__bins);
SEXP savvy_PlRExpr_implode__ffi(SEXP self__);
SEXP savvy_PlRExpr_interpolate__ffi(SEXP self__, SEXP c_arg__method);
SEXP savvy_PlRExpr_interpolate_by__ffi(SEXP self__, SEXP c_arg__by);
SEXP savvy_PlRExpr_into_selector__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_between__ffi(SEXP self__, SEXP c_arg__lower, SEXP c_arg__upper, SEXP c_arg__closed);
SEXP savvy_PlRExpr_is_duplicated__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_finite__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_first_distinct__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_in__ffi(SEXP self__, SEXP c_arg__expr, SEXP c_arg__nulls_equal);
SEXP savvy_PlRExpr_is_infinite__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_last_distinct__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_nan__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_not_nan__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_not_null__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_null__ffi(SEXP self__);
SEXP savvy_PlRExpr_is_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_kurtosis__ffi(SEXP self__, SEXP c_arg__fisher, SEXP c_arg__bias);
SEXP savvy_PlRExpr_last__ffi(SEXP self__);
SEXP savvy_PlRExpr_len__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_all__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_any__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_arg_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_arg_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_contains__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__nulls_equal);
SEXP savvy_PlRExpr_list_count_matches__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_list_diff__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__null_behavior);
SEXP savvy_PlRExpr_list_drop_nulls__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_eval__ffi(SEXP self__, SEXP c_arg__expr);
SEXP savvy_PlRExpr_list_gather__ffi(SEXP self__, SEXP c_arg__indices, SEXP c_arg__null_on_oob);
SEXP savvy_PlRExpr_list_gather_every__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__offset);
SEXP savvy_PlRExpr_list_get__ffi(SEXP self__, SEXP c_arg__index, SEXP c_arg__null_on_oob);
SEXP savvy_PlRExpr_list_join__ffi(SEXP self__, SEXP c_arg__separator, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_list_len__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_mean__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_median__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_n_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_reverse__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_sample_frac__ffi(SEXP self__, SEXP c_arg__frac, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRExpr_list_sample_n__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRExpr_list_set_operation__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__operation);
SEXP savvy_PlRExpr_list_shift__ffi(SEXP self__, SEXP c_arg__periods);
SEXP savvy_PlRExpr_list_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__length);
SEXP savvy_PlRExpr_list_sort__ffi(SEXP self__, SEXP c_arg__descending, SEXP c_arg__nulls_last);
SEXP savvy_PlRExpr_list_std__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_list_sum__ffi(SEXP self__);
SEXP savvy_PlRExpr_list_to_array__ffi(SEXP self__, SEXP c_arg__width);
SEXP savvy_PlRExpr_list_to_struct__ffi(SEXP self__, SEXP c_arg__width_strat, SEXP c_arg__name_gen, SEXP c_arg__upper_bound);
SEXP savvy_PlRExpr_list_to_struct_fixed_width__ffi(SEXP self__, SEXP c_arg__names);
SEXP savvy_PlRExpr_list_unique__ffi(SEXP self__, SEXP c_arg__maintain_order);
SEXP savvy_PlRExpr_list_var__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_log__ffi(SEXP self__, SEXP c_arg__base);
SEXP savvy_PlRExpr_log1p__ffi(SEXP self__);
SEXP savvy_PlRExpr_lower_bound__ffi(SEXP self__);
SEXP savvy_PlRExpr_lt__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_lt_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_map_batches__ffi(SEXP self__, SEXP c_arg__lambda, SEXP c_arg__output_type);
SEXP savvy_PlRExpr_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_mean__ffi(SEXP self__);
SEXP savvy_PlRExpr_median__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_eq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_meta_has_multiple_outputs__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_is_column__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_is_column_selection__ffi(SEXP self__, SEXP c_arg__allow_aliasing);
SEXP savvy_PlRExpr_meta_is_literal__ffi(SEXP self__, SEXP c_arg__allow_aliasing);
SEXP savvy_PlRExpr_meta_is_regex_projection__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_output_name__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_pop__ffi(SEXP self__, SEXP c_arg__schema);
SEXP savvy_PlRExpr_meta_root_names__ffi(SEXP self__);
SEXP savvy_PlRExpr_meta_undo_aliases__ffi(SEXP self__);
SEXP savvy_PlRExpr_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_mode__ffi(SEXP self__);
SEXP savvy_PlRExpr_mul__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_n_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_name_keep__ffi(SEXP self__);
SEXP savvy_PlRExpr_name_prefix__ffi(SEXP self__, SEXP c_arg__prefix);
SEXP savvy_PlRExpr_name_prefix_fields__ffi(SEXP self__, SEXP c_arg__prefix);
SEXP savvy_PlRExpr_name_suffix__ffi(SEXP self__, SEXP c_arg__suffix);
SEXP savvy_PlRExpr_name_suffix_fields__ffi(SEXP self__, SEXP c_arg__suffix);
SEXP savvy_PlRExpr_name_to_lowercase__ffi(SEXP self__);
SEXP savvy_PlRExpr_name_to_uppercase__ffi(SEXP self__);
SEXP savvy_PlRExpr_nan_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_nan_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_neg__ffi(SEXP self__);
SEXP savvy_PlRExpr_neq__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_neq_missing__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_new_selector__ffi(SEXP c_arg__selector);
SEXP savvy_PlRExpr_not__ffi(SEXP self__);
SEXP savvy_PlRExpr_null_count__ffi(SEXP self__);
SEXP savvy_PlRExpr_or__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRExpr_over__ffi(SEXP self__, SEXP c_arg__order_by_descending, SEXP c_arg__order_by_nulls_last, SEXP c_arg__mapping_strategy, SEXP c_arg__partition_by, SEXP c_arg__order_by);
SEXP savvy_PlRExpr_pct_change__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRExpr_peak_max__ffi(SEXP self__);
SEXP savvy_PlRExpr_peak_min__ffi(SEXP self__);
SEXP savvy_PlRExpr_pow__ffi(SEXP self__, SEXP c_arg__exponent);
SEXP savvy_PlRExpr_product__ffi(SEXP self__);
SEXP savvy_PlRExpr_qcut__ffi(SEXP self__, SEXP c_arg__probs, SEXP c_arg__left_closed, SEXP c_arg__allow_duplicates, SEXP c_arg__include_breaks, SEXP c_arg__labels);
SEXP savvy_PlRExpr_qcut_uniform__ffi(SEXP self__, SEXP c_arg__n_bins, SEXP c_arg__left_closed, SEXP c_arg__allow_duplicates, SEXP c_arg__include_breaks, SEXP c_arg__labels);
SEXP savvy_PlRExpr_quantile__ffi(SEXP self__, SEXP c_arg__quantile, SEXP c_arg__interpolation);
SEXP savvy_PlRExpr_radians__ffi(SEXP self__);
SEXP savvy_PlRExpr_rank__ffi(SEXP self__, SEXP c_arg__method, SEXP c_arg__descending, SEXP c_arg__seed);
SEXP savvy_PlRExpr_rechunk__ffi(SEXP self__);
SEXP savvy_PlRExpr_reinterpret__ffi(SEXP self__, SEXP c_arg__signed);
SEXP savvy_PlRExpr_rem__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_repeat_by__ffi(SEXP self__, SEXP c_arg__by);
SEXP savvy_PlRExpr_replace__ffi(SEXP self__, SEXP c_arg__old, SEXP c_arg__new);
SEXP savvy_PlRExpr_replace_strict__ffi(SEXP self__, SEXP c_arg__old, SEXP c_arg__new, SEXP c_arg__default, SEXP c_arg__return_dtype);
SEXP savvy_PlRExpr_reshape__ffi(SEXP self__, SEXP c_arg__dimensions);
SEXP savvy_PlRExpr_reverse__ffi(SEXP self__);
SEXP savvy_PlRExpr_rle__ffi(SEXP self__);
SEXP savvy_PlRExpr_rle_id__ffi(SEXP self__);
SEXP savvy_PlRExpr_rolling__ffi(SEXP self__, SEXP c_arg__index_column, SEXP c_arg__period, SEXP c_arg__offset, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_max__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_max_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_mean__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_mean_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_median__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_median_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_min__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_min_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_quantile__ffi(SEXP self__, SEXP c_arg__quantile, SEXP c_arg__interpolation, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_quantile_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__quantile, SEXP c_arg__interpolation, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_skew__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__bias, SEXP c_arg__center, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_std__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__ddof, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_std_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_rolling_sum__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_sum_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed);
SEXP savvy_PlRExpr_rolling_var__ffi(SEXP self__, SEXP c_arg__window_size, SEXP c_arg__center, SEXP c_arg__ddof, SEXP c_arg__weights, SEXP c_arg__min_samples);
SEXP savvy_PlRExpr_rolling_var_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__window_size, SEXP c_arg__min_samples, SEXP c_arg__closed, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_round__ffi(SEXP self__, SEXP c_arg__decimals, SEXP c_arg__mode);
SEXP savvy_PlRExpr_round_sig_figs__ffi(SEXP self__, SEXP c_arg__digits);
SEXP savvy_PlRExpr_sample_frac__ffi(SEXP self__, SEXP c_arg__frac, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRExpr_sample_n__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__with_replacement, SEXP c_arg__shuffle, SEXP c_arg__seed);
SEXP savvy_PlRExpr_search_sorted__ffi(SEXP self__, SEXP c_arg__element, SEXP c_arg__side, SEXP c_arg__descending);
SEXP savvy_PlRExpr_serialize_binary__ffi(SEXP self__);
SEXP savvy_PlRExpr_serialize_json__ffi(SEXP self__);
SEXP savvy_PlRExpr_set_sorted_flag__ffi(SEXP self__, SEXP c_arg__descending);
SEXP savvy_PlRExpr_shift__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__fill_value);
SEXP savvy_PlRExpr_shrink_dtype__ffi(SEXP self__);
SEXP savvy_PlRExpr_shuffle__ffi(SEXP self__, SEXP c_arg__seed);
SEXP savvy_PlRExpr_sign__ffi(SEXP self__);
SEXP savvy_PlRExpr_sin__ffi(SEXP self__);
SEXP savvy_PlRExpr_sinh__ffi(SEXP self__);
SEXP savvy_PlRExpr_skew__ffi(SEXP self__, SEXP c_arg__bias);
SEXP savvy_PlRExpr_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__length);
SEXP savvy_PlRExpr_sort_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__descending, SEXP c_arg__nulls_last, SEXP c_arg__multithreaded, SEXP c_arg__maintain_order);
SEXP savvy_PlRExpr_sort_with__ffi(SEXP self__, SEXP c_arg__descending, SEXP c_arg__nulls_last);
SEXP savvy_PlRExpr_sqrt__ffi(SEXP self__);
SEXP savvy_PlRExpr_std__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_str_base64_decode__ffi(SEXP self__, SEXP c_arg__strict);
SEXP savvy_PlRExpr_str_base64_encode__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_contains__ffi(SEXP self__, SEXP c_arg__pat, SEXP c_arg__literal, SEXP c_arg__strict);
SEXP savvy_PlRExpr_str_contains_any__ffi(SEXP self__, SEXP c_arg__patterns, SEXP c_arg__ascii_case_insensitive);
SEXP savvy_PlRExpr_str_count_matches__ffi(SEXP self__, SEXP c_arg__pat, SEXP c_arg__literal);
SEXP savvy_PlRExpr_str_ends_with__ffi(SEXP self__, SEXP c_arg__suffix);
SEXP savvy_PlRExpr_str_escape_regex__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_extract__ffi(SEXP self__, SEXP c_arg__pattern, SEXP c_arg__group_index);
SEXP savvy_PlRExpr_str_extract_all__ffi(SEXP self__, SEXP c_arg__pattern);
SEXP savvy_PlRExpr_str_extract_groups__ffi(SEXP self__, SEXP c_arg__pattern);
SEXP savvy_PlRExpr_str_extract_many__ffi(SEXP self__, SEXP c_arg__patterns, SEXP c_arg__ascii_case_insensitive, SEXP c_arg__overlapping);
SEXP savvy_PlRExpr_str_find__ffi(SEXP self__, SEXP c_arg__pat, SEXP c_arg__literal, SEXP c_arg__strict);
SEXP savvy_PlRExpr_str_find_many__ffi(SEXP self__, SEXP c_arg__patterns, SEXP c_arg__ascii_case_insensitive, SEXP c_arg__overlapping);
SEXP savvy_PlRExpr_str_head__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRExpr_str_hex_decode__ffi(SEXP self__, SEXP c_arg__strict);
SEXP savvy_PlRExpr_str_hex_encode__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_join__ffi(SEXP self__, SEXP c_arg__delimiter, SEXP c_arg__ignore_nulls);
SEXP savvy_PlRExpr_str_json_decode__ffi(SEXP self__, SEXP c_arg__infer_schema_length, SEXP c_arg__dtype);
SEXP savvy_PlRExpr_str_json_path_match__ffi(SEXP self__, SEXP c_arg__pat);
SEXP savvy_PlRExpr_str_len_bytes__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_len_chars__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_normalize__ffi(SEXP self__, SEXP c_arg__form);
SEXP savvy_PlRExpr_str_pad_end__ffi(SEXP self__, SEXP c_arg__length, SEXP c_arg__fill_char);
SEXP savvy_PlRExpr_str_pad_start__ffi(SEXP self__, SEXP c_arg__length, SEXP c_arg__fill_char);
SEXP savvy_PlRExpr_str_replace__ffi(SEXP self__, SEXP c_arg__pat, SEXP c_arg__value, SEXP c_arg__literal, SEXP c_arg__n);
SEXP savvy_PlRExpr_str_replace_all__ffi(SEXP self__, SEXP c_arg__pat, SEXP c_arg__value, SEXP c_arg__literal);
SEXP savvy_PlRExpr_str_replace_many__ffi(SEXP self__, SEXP c_arg__patterns, SEXP c_arg__replace_with, SEXP c_arg__ascii_case_insensitive);
SEXP savvy_PlRExpr_str_reverse__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__length);
SEXP savvy_PlRExpr_str_split__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__inclusive);
SEXP savvy_PlRExpr_str_split_exact__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__n, SEXP c_arg__inclusive);
SEXP savvy_PlRExpr_str_splitn__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__n);
SEXP savvy_PlRExpr_str_starts_with__ffi(SEXP self__, SEXP c_arg__prefix);
SEXP savvy_PlRExpr_str_strip_chars__ffi(SEXP self__, SEXP c_arg__characters);
SEXP savvy_PlRExpr_str_strip_chars_end__ffi(SEXP self__, SEXP c_arg__characters);
SEXP savvy_PlRExpr_str_strip_chars_start__ffi(SEXP self__, SEXP c_arg__characters);
SEXP savvy_PlRExpr_str_strip_prefix__ffi(SEXP self__, SEXP c_arg__prefix);
SEXP savvy_PlRExpr_str_strip_suffix__ffi(SEXP self__, SEXP c_arg__suffix);
SEXP savvy_PlRExpr_str_tail__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRExpr_str_to_date__ffi(SEXP self__, SEXP c_arg__strict, SEXP c_arg__exact, SEXP c_arg__cache, SEXP c_arg__format);
SEXP savvy_PlRExpr_str_to_datetime__ffi(SEXP self__, SEXP c_arg__strict, SEXP c_arg__exact, SEXP c_arg__cache, SEXP c_arg__ambiguous, SEXP c_arg__format, SEXP c_arg__time_unit, SEXP c_arg__time_zone);
SEXP savvy_PlRExpr_str_to_decimal__ffi(SEXP self__, SEXP c_arg__infer_len);
SEXP savvy_PlRExpr_str_to_integer__ffi(SEXP self__, SEXP c_arg__base, SEXP c_arg__strict, SEXP c_arg__dtype);
SEXP savvy_PlRExpr_str_to_lowercase__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_to_time__ffi(SEXP self__, SEXP c_arg__strict, SEXP c_arg__cache, SEXP c_arg__format);
SEXP savvy_PlRExpr_str_to_titlecase__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_to_uppercase__ffi(SEXP self__);
SEXP savvy_PlRExpr_str_zfill__ffi(SEXP self__, SEXP c_arg__length);
SEXP savvy_PlRExpr_struct_field_by_index__ffi(SEXP self__, SEXP c_arg__index);
SEXP savvy_PlRExpr_struct_json_encode__ffi(SEXP self__);
SEXP savvy_PlRExpr_struct_multiple_fields__ffi(SEXP self__, SEXP c_arg__names);
SEXP savvy_PlRExpr_struct_rename_fields__ffi(SEXP self__, SEXP c_arg__names);
SEXP savvy_PlRExpr_struct_with_fields__ffi(SEXP self__, SEXP c_arg__fields);
SEXP savvy_PlRExpr_sub__ffi(SEXP self__, SEXP c_arg__rhs);
SEXP savvy_PlRExpr_sum__ffi(SEXP self__);
SEXP savvy_PlRExpr_tan__ffi(SEXP self__);
SEXP savvy_PlRExpr_tanh__ffi(SEXP self__);
SEXP savvy_PlRExpr_to_physical__ffi(SEXP self__);
SEXP savvy_PlRExpr_top_k__ffi(SEXP self__, SEXP c_arg__k);
SEXP savvy_PlRExpr_top_k_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__k, SEXP c_arg__reverse);
SEXP savvy_PlRExpr_unique__ffi(SEXP self__);
SEXP savvy_PlRExpr_unique_counts__ffi(SEXP self__);
SEXP savvy_PlRExpr_unique_stable__ffi(SEXP self__);
SEXP savvy_PlRExpr_upper_bound__ffi(SEXP self__);
SEXP savvy_PlRExpr_value_counts__ffi(SEXP self__, SEXP c_arg__sort, SEXP c_arg__parallel, SEXP c_arg__name, SEXP c_arg__normalize);
SEXP savvy_PlRExpr_var__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRExpr_xor__ffi(SEXP self__, SEXP c_arg__other);

// methods and associated functions for PlRLazyFrame
SEXP savvy_PlRLazyFrame_bottom_k__ffi(SEXP self__, SEXP c_arg__k, SEXP c_arg__by, SEXP c_arg__reverse);
SEXP savvy_PlRLazyFrame_cache__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_cast__ffi(SEXP self__, SEXP c_arg__dtypes, SEXP c_arg__strict);
SEXP savvy_PlRLazyFrame_cast_all__ffi(SEXP self__, SEXP c_arg__dtype, SEXP c_arg__strict);
SEXP savvy_PlRLazyFrame_clone__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_collect__ffi(SEXP self__, SEXP c_arg__engine);
SEXP savvy_PlRLazyFrame_collect_schema__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_count__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_describe_optimized_plan__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_describe_optimized_plan_tree__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_describe_plan__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_describe_plan_tree__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_deserialize_binary__ffi(SEXP c_arg__data);
SEXP savvy_PlRLazyFrame_drop__ffi(SEXP self__, SEXP c_arg__columns);
SEXP savvy_PlRLazyFrame_drop_nans__ffi(SEXP self__, SEXP c_arg__subset);
SEXP savvy_PlRLazyFrame_drop_nulls__ffi(SEXP self__, SEXP c_arg__subset);
SEXP savvy_PlRLazyFrame_explode__ffi(SEXP self__, SEXP c_arg__subset);
SEXP savvy_PlRLazyFrame_fill_nan__ffi(SEXP self__, SEXP c_arg__fill_value);
SEXP savvy_PlRLazyFrame_filter__ffi(SEXP self__, SEXP c_arg__predicate);
SEXP savvy_PlRLazyFrame_group_by__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__maintain_order);
SEXP savvy_PlRLazyFrame_group_by_dynamic__ffi(SEXP self__, SEXP c_arg__index_column, SEXP c_arg__every, SEXP c_arg__period, SEXP c_arg__offset, SEXP c_arg__label, SEXP c_arg__include_boundaries, SEXP c_arg__closed, SEXP c_arg__group_by, SEXP c_arg__start_by);
SEXP savvy_PlRLazyFrame_join__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__left_on, SEXP c_arg__right_on, SEXP c_arg__allow_parallel, SEXP c_arg__force_parallel, SEXP c_arg__nulls_equal, SEXP c_arg__how, SEXP c_arg__suffix, SEXP c_arg__validate, SEXP c_arg__maintain_order, SEXP c_arg__coalesce);
SEXP savvy_PlRLazyFrame_join_asof__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__left_on, SEXP c_arg__right_on, SEXP c_arg__allow_parallel, SEXP c_arg__force_parallel, SEXP c_arg__suffix, SEXP c_arg__coalesce, SEXP c_arg__strategy, SEXP c_arg__allow_eq, SEXP c_arg__check_sortedness, SEXP c_arg__left_by, SEXP c_arg__right_by, SEXP c_arg__tolerance, SEXP c_arg__tolerance_str);
SEXP savvy_PlRLazyFrame_join_where__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__predicates, SEXP c_arg__suffix);
SEXP savvy_PlRLazyFrame_max__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_mean__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_median__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_merge_sorted__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__key);
SEXP savvy_PlRLazyFrame_min__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_new_from_csv__ffi(SEXP c_arg__source, SEXP c_arg__separator, SEXP c_arg__has_header, SEXP c_arg__ignore_errors, SEXP c_arg__skip_rows, SEXP c_arg__cache, SEXP c_arg__missing_utf8_is_empty_string, SEXP c_arg__low_memory, SEXP c_arg__rechunk, SEXP c_arg__skip_rows_after_header, SEXP c_arg__encoding, SEXP c_arg__try_parse_dates, SEXP c_arg__eol_char, SEXP c_arg__raise_if_empty, SEXP c_arg__truncate_ragged_lines, SEXP c_arg__decimal_comma, SEXP c_arg__glob, SEXP c_arg__retries, SEXP c_arg__row_index_offset, SEXP c_arg__comment_prefix, SEXP c_arg__quote_char, SEXP c_arg__null_values, SEXP c_arg__infer_schema_length, SEXP c_arg__row_index_name, SEXP c_arg__n_rows, SEXP c_arg__overwrite_dtype, SEXP c_arg__schema, SEXP c_arg__storage_options, SEXP c_arg__file_cache_ttl, SEXP c_arg__include_file_paths);
SEXP savvy_PlRLazyFrame_new_from_ipc__ffi(SEXP c_arg__source, SEXP c_arg__cache, SEXP c_arg__rechunk, SEXP c_arg__try_parse_hive_dates, SEXP c_arg__retries, SEXP c_arg__row_index_offset, SEXP c_arg__n_rows, SEXP c_arg__row_index_name, SEXP c_arg__storage_options, SEXP c_arg__hive_partitioning, SEXP c_arg__hive_schema, SEXP c_arg__file_cache_ttl, SEXP c_arg__include_file_paths);
SEXP savvy_PlRLazyFrame_new_from_ndjson__ffi(SEXP c_arg__source, SEXP c_arg__low_memory, SEXP c_arg__rechunk, SEXP c_arg__ignore_errors, SEXP c_arg__retries, SEXP c_arg__row_index_offset, SEXP c_arg__row_index_name, SEXP c_arg__infer_schema_length, SEXP c_arg__schema, SEXP c_arg__schema_overrides, SEXP c_arg__batch_size, SEXP c_arg__n_rows, SEXP c_arg__include_file_paths, SEXP c_arg__storage_options, SEXP c_arg__file_cache_ttl);
SEXP savvy_PlRLazyFrame_new_from_parquet__ffi(SEXP c_arg__source, SEXP c_arg__cache, SEXP c_arg__parallel, SEXP c_arg__rechunk, SEXP c_arg__low_memory, SEXP c_arg__use_statistics, SEXP c_arg__try_parse_hive_dates, SEXP c_arg__retries, SEXP c_arg__glob, SEXP c_arg__allow_missing_columns, SEXP c_arg__row_index_offset, SEXP c_arg__storage_options, SEXP c_arg__n_rows, SEXP c_arg__row_index_name, SEXP c_arg__hive_partitioning, SEXP c_arg__schema, SEXP c_arg__hive_schema, SEXP c_arg__include_file_paths);
SEXP savvy_PlRLazyFrame_null_count__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_optimization_toggle__ffi(SEXP self__, SEXP c_arg__type_coercion, SEXP c_arg___type_check, SEXP c_arg__predicate_pushdown, SEXP c_arg__projection_pushdown, SEXP c_arg__simplify_expression, SEXP c_arg__slice_pushdown, SEXP c_arg__comm_subplan_elim, SEXP c_arg__comm_subexpr_elim, SEXP c_arg__cluster_with_columns, SEXP c_arg__collapse_joins, SEXP c_arg___eager, SEXP c_arg___check_order);
SEXP savvy_PlRLazyFrame_profile__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_quantile__ffi(SEXP self__, SEXP c_arg__quantile, SEXP c_arg__interpolation);
SEXP savvy_PlRLazyFrame_rename__ffi(SEXP self__, SEXP c_arg__existing, SEXP c_arg__new, SEXP c_arg__strict);
SEXP savvy_PlRLazyFrame_reverse__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_rolling__ffi(SEXP self__, SEXP c_arg__index_column, SEXP c_arg__period, SEXP c_arg__offset, SEXP c_arg__closed, SEXP c_arg__by);
SEXP savvy_PlRLazyFrame_select__ffi(SEXP self__, SEXP c_arg__exprs);
SEXP savvy_PlRLazyFrame_select_seq__ffi(SEXP self__, SEXP c_arg__exprs);
SEXP savvy_PlRLazyFrame_serialize_binary__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_serialize_json__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_shift__ffi(SEXP self__, SEXP c_arg__n, SEXP c_arg__fill_value);
SEXP savvy_PlRLazyFrame_sink_csv__ffi(SEXP self__, SEXP c_arg__target, SEXP c_arg__include_bom, SEXP c_arg__include_header, SEXP c_arg__separator, SEXP c_arg__line_terminator, SEXP c_arg__quote_char, SEXP c_arg__batch_size, SEXP c_arg__retries, SEXP c_arg__sync_on_close, SEXP c_arg__maintain_order, SEXP c_arg__mkdir, SEXP c_arg__decimal_comma, SEXP c_arg__datetime_format, SEXP c_arg__date_format, SEXP c_arg__time_format, SEXP c_arg__float_scientific, SEXP c_arg__float_precision, SEXP c_arg__null_value, SEXP c_arg__quote_style, SEXP c_arg__storage_options);
SEXP savvy_PlRLazyFrame_sink_ipc__ffi(SEXP self__, SEXP c_arg__target, SEXP c_arg__compression, SEXP c_arg__compat_level, SEXP c_arg__retries, SEXP c_arg__sync_on_close, SEXP c_arg__maintain_order, SEXP c_arg__mkdir, SEXP c_arg__storage_options);
SEXP savvy_PlRLazyFrame_sink_json__ffi(SEXP self__, SEXP c_arg__target, SEXP c_arg__retries, SEXP c_arg__sync_on_close, SEXP c_arg__maintain_order, SEXP c_arg__mkdir, SEXP c_arg__storage_options);
SEXP savvy_PlRLazyFrame_sink_parquet__ffi(SEXP self__, SEXP c_arg__target, SEXP c_arg__compression, SEXP c_arg__stat_min, SEXP c_arg__stat_max, SEXP c_arg__stat_distinct_count, SEXP c_arg__stat_null_count, SEXP c_arg__retries, SEXP c_arg__sync_on_close, SEXP c_arg__maintain_order, SEXP c_arg__mkdir, SEXP c_arg__compression_level, SEXP c_arg__row_group_size, SEXP c_arg__data_page_size, SEXP c_arg__storage_options);
SEXP savvy_PlRLazyFrame_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__len);
SEXP savvy_PlRLazyFrame_sort__ffi(SEXP self__, SEXP c_arg__by_column, SEXP c_arg__descending, SEXP c_arg__nulls_last, SEXP c_arg__maintain_order, SEXP c_arg__multithreaded);
SEXP savvy_PlRLazyFrame_sort_by_exprs__ffi(SEXP self__, SEXP c_arg__by, SEXP c_arg__descending, SEXP c_arg__nulls_last, SEXP c_arg__maintain_order, SEXP c_arg__multithreaded);
SEXP savvy_PlRLazyFrame_std__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRLazyFrame_sum__ffi(SEXP self__);
SEXP savvy_PlRLazyFrame_tail__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRLazyFrame_to_dot__ffi(SEXP self__, SEXP c_arg__optimized);
SEXP savvy_PlRLazyFrame_top_k__ffi(SEXP self__, SEXP c_arg__k, SEXP c_arg__by, SEXP c_arg__reverse);
SEXP savvy_PlRLazyFrame_unique__ffi(SEXP self__, SEXP c_arg__maintain_order, SEXP c_arg__keep, SEXP c_arg__subset);
SEXP savvy_PlRLazyFrame_unnest__ffi(SEXP self__, SEXP c_arg__columns);
SEXP savvy_PlRLazyFrame_unpivot__ffi(SEXP self__, SEXP c_arg__on, SEXP c_arg__index, SEXP c_arg__value_name, SEXP c_arg__variable_name);
SEXP savvy_PlRLazyFrame_var__ffi(SEXP self__, SEXP c_arg__ddof);
SEXP savvy_PlRLazyFrame_with_columns__ffi(SEXP self__, SEXP c_arg__exprs);
SEXP savvy_PlRLazyFrame_with_columns_seq__ffi(SEXP self__, SEXP c_arg__exprs);
SEXP savvy_PlRLazyFrame_with_row_index__ffi(SEXP self__, SEXP c_arg__name, SEXP c_arg__offset);

// methods and associated functions for PlRLazyGroupBy
SEXP savvy_PlRLazyGroupBy_agg__ffi(SEXP self__, SEXP c_arg__aggs);
SEXP savvy_PlRLazyGroupBy_head__ffi(SEXP self__, SEXP c_arg__n);
SEXP savvy_PlRLazyGroupBy_tail__ffi(SEXP self__, SEXP c_arg__n);

// methods and associated functions for PlRPartitioning
SEXP savvy_PlRPartitioning_base_path__ffi(SEXP self__);
SEXP savvy_PlRPartitioning_new_by_key__ffi(SEXP c_arg__base_path, SEXP c_arg__by, SEXP c_arg__include_key, SEXP c_arg__per_partition_sort_by);
SEXP savvy_PlRPartitioning_new_max_size__ffi(SEXP c_arg__base_path, SEXP c_arg__max_size, SEXP c_arg__per_partition_sort_by);
SEXP savvy_PlRPartitioning_new_parted__ffi(SEXP c_arg__base_path, SEXP c_arg__by, SEXP c_arg__include_key, SEXP c_arg__per_partition_sort_by);

// methods and associated functions for PlRSQLContext
SEXP savvy_PlRSQLContext_execute__ffi(SEXP self__, SEXP c_arg__query);
SEXP savvy_PlRSQLContext_get_tables__ffi(SEXP self__);
SEXP savvy_PlRSQLContext_new__ffi(void);
SEXP savvy_PlRSQLContext_register__ffi(SEXP self__, SEXP c_arg__name, SEXP c_arg__lf);
SEXP savvy_PlRSQLContext_unregister__ffi(SEXP self__, SEXP c_arg__name);

// methods and associated functions for PlRSelector
SEXP savvy_PlRSelector_all__ffi(void);
SEXP savvy_PlRSelector_array__ffi(SEXP c_arg__inner_dst, SEXP c_arg__width);
SEXP savvy_PlRSelector_by_dtype__ffi(SEXP c_arg__dtypes);
SEXP savvy_PlRSelector_by_index__ffi(SEXP c_arg__indices, SEXP c_arg__require_all);
SEXP savvy_PlRSelector_by_name__ffi(SEXP c_arg__names, SEXP c_arg__require_all);
SEXP savvy_PlRSelector_categorical__ffi(void);
SEXP savvy_PlRSelector_datetime__ffi(SEXP c_arg__time_unit, SEXP c_arg__time_zone);
SEXP savvy_PlRSelector_decimal__ffi(void);
SEXP savvy_PlRSelector_difference__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSelector_duration__ffi(SEXP c_arg__time_unit);
SEXP savvy_PlRSelector_empty__ffi(void);
SEXP savvy_PlRSelector_exclusive_or__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSelector_first__ffi(SEXP c_arg__strict);
SEXP savvy_PlRSelector_float__ffi(void);
SEXP savvy_PlRSelector_hash__ffi(SEXP self__);
SEXP savvy_PlRSelector_integer__ffi(void);
SEXP savvy_PlRSelector_intersect__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSelector_last__ffi(SEXP c_arg__strict);
SEXP savvy_PlRSelector_list__ffi(SEXP c_arg__inner_dst);
SEXP savvy_PlRSelector_matches__ffi(SEXP c_arg__pattern);
SEXP savvy_PlRSelector_nested__ffi(void);
SEXP savvy_PlRSelector_numeric__ffi(void);
SEXP savvy_PlRSelector_enum__ffi(void);
SEXP savvy_PlRSelector_struct__ffi(void);
SEXP savvy_PlRSelector_signed_integer__ffi(void);
SEXP savvy_PlRSelector_temporal__ffi(void);
SEXP savvy_PlRSelector_union__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSelector_unsigned_integer__ffi(void);

// methods and associated functions for PlRSeries
SEXP savvy_PlRSeries_add__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSeries_as_str__ffi(SEXP self__);
SEXP savvy_PlRSeries_can_fast_explode_flag__ffi(SEXP self__);
SEXP savvy_PlRSeries_cast__ffi(SEXP self__, SEXP c_arg__dtype, SEXP c_arg__strict);
SEXP savvy_PlRSeries_cat_is_local__ffi(SEXP self__);
SEXP savvy_PlRSeries_cat_to_local__ffi(SEXP self__);
SEXP savvy_PlRSeries_cat_uses_lexical_ordering__ffi(SEXP self__);
SEXP savvy_PlRSeries_chunk_lengths__ffi(SEXP self__);
SEXP savvy_PlRSeries_clone__ffi(SEXP self__);
SEXP savvy_PlRSeries_deserialize__ffi(SEXP c_arg__data);
SEXP savvy_PlRSeries_div__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSeries_dtype__ffi(SEXP self__);
SEXP savvy_PlRSeries_equals__ffi(SEXP self__, SEXP c_arg__other, SEXP c_arg__check_dtypes, SEXP c_arg__check_names, SEXP c_arg__null_equal);
SEXP savvy_PlRSeries_from_arrow_c_stream__ffi(SEXP c_arg__stream_ptr);
SEXP savvy_PlRSeries_get_fmt__ffi(SEXP self__, SEXP c_arg__str_len_limit);
SEXP savvy_PlRSeries_is_sorted_ascending_flag__ffi(SEXP self__);
SEXP savvy_PlRSeries_is_sorted_descending_flag__ffi(SEXP self__);
SEXP savvy_PlRSeries_len__ffi(SEXP self__);
SEXP savvy_PlRSeries_mul__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSeries_n_chunks__ffi(SEXP self__);
SEXP savvy_PlRSeries_name__ffi(SEXP self__);
SEXP savvy_PlRSeries_new_binary__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_bool__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_f64__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_i32__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_i32_from_date__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_i64__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_i64_from_clock_pair__ffi(SEXP c_arg__name, SEXP c_arg__left, SEXP c_arg__right, SEXP c_arg__precision);
SEXP savvy_PlRSeries_new_i64_from_numeric_and_multiplier__ffi(SEXP c_arg__name, SEXP c_arg__values, SEXP c_arg__multiplier, SEXP c_arg__rounding);
SEXP savvy_PlRSeries_new_null__ffi(SEXP c_arg__name, SEXP c_arg__length);
SEXP savvy_PlRSeries_new_series_list__ffi(SEXP c_arg__name, SEXP c_arg__values, SEXP c_arg__strict);
SEXP savvy_PlRSeries_new_str__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_new_uint8__ffi(SEXP c_arg__name, SEXP c_arg__values);
SEXP savvy_PlRSeries_rechunk__ffi(SEXP self__, SEXP c_arg__in_place);
SEXP savvy_PlRSeries_rem__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSeries_rename__ffi(SEXP self__, SEXP c_arg__name);
SEXP savvy_PlRSeries_reshape__ffi(SEXP self__, SEXP c_arg__dimensions);
SEXP savvy_PlRSeries_serialize__ffi(SEXP self__);
SEXP savvy_PlRSeries_slice__ffi(SEXP self__, SEXP c_arg__offset, SEXP c_arg__length);
SEXP savvy_PlRSeries_struct_fields__ffi(SEXP self__);
SEXP savvy_PlRSeries_struct_unnest__ffi(SEXP self__);
SEXP savvy_PlRSeries_sub__ffi(SEXP self__, SEXP c_arg__other);
SEXP savvy_PlRSeries_to_arrow_c_stream__ffi(SEXP self__, SEXP c_arg__stream_ptr, SEXP c_arg__polars_compat_level);
SEXP savvy_PlRSeries_to_r_vector__ffi(SEXP self__, SEXP c_arg__uint8, SEXP c_arg__int64, SEXP c_arg__date, SEXP c_arg__time, SEXP c_arg__struct, SEXP c_arg__decimal, SEXP c_arg__as_clock_class, SEXP c_arg__ambiguous, SEXP c_arg__non_existent, SEXP c_arg__local_time_zone);

// methods and associated functions for PlRThen
SEXP savvy_PlRThen_otherwise__ffi(SEXP self__, SEXP c_arg__statement);
SEXP savvy_PlRThen_when__ffi(SEXP self__, SEXP c_arg__condition);

// methods and associated functions for PlRWhen
SEXP savvy_PlRWhen_then__ffi(SEXP self__, SEXP c_arg__statement);
