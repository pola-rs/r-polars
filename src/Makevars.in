TARGET ?= @RUST_TARGET@
LIBR_POLARS_PROFILE ?= release
LIBR_POLARS_FEATURES ?=

LIBNAME = libr_polars.a
TARGET_DIR = $(CURDIR)/rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(LIBR_POLARS_PROFILE)
STATLIB = $(LIBDIR)/$(LIBNAME)
PKG_LIBS = -L$(LIBDIR) -lr_polars @ADDITIONAL_PKG_LIBS_FLAG@

.PHONY: all
all: cleanup

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo

$(STATLIB): remove-prev
	if [ -f "$(CURDIR)/../tools/$(LIBNAME)" ]; then \
		mkdir -p "$(LIBDIR)" ; \
		mv "$(CURDIR)/../tools/$(LIBNAME)" "$(STATLIB)" ; \
		exit 0; \
	fi && \
	if [ "true" != "true" ]; then \
		export CARGO_HOME="$(CARGOTMP)"; \
		export CARGO_BUILD_JOBS=2; \
	fi && \
		export PATH="$(PATH):$(HOME)/.cargo/bin" && \
		cargo build --lib --manifest-path="$(CURDIR)/rust/Cargo.toml" --target-dir "$(TARGET_DIR)" --target="$(TARGET)" \
			--profile="$(LIBR_POLARS_PROFILE)" --features="$(LIBR_POLARS_FEATURES)"

.PHONY: remove-prev
# Remove previous build artifacts
remove-prev:
	rm -f "$(STATLIB)"

.PHONY: cleanup
cleanup: $(SHLIB)
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -Rf "$(STATLIB)"; \
	fi

.PHONY: clean
clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)" "$(TARGET_DIR)"
