BUILD_COMMAND = cargo build --lib --release --manifest-path="$(RPOLARS_RUST_SOURCE)/Cargo.toml"

LIBDIR = ./rust/target/release
STATLIB = $(LIBDIR)/libr_polars.a
PKG_LIBS = -L$(LIBDIR) -lr_polars
RPOLARS_RUST_SOURCE ?= ./rust
RPOLARS_CARGO_CLEAN_DEPS ?= nope
rpolars_ext_binary = "$(RPOLARS_RUST_SOURCE)/target/release/libr_polars.a"

all: C_clean

$(SHLIB): $(STATLIB)

$(STATLIB):
	if [ "$(RPOLARS_ALL_FEATURES)" == "true" ]; then \
		$(BUILD_COMMAND) --all-features; \
	else \
		$(BUILD_COMMAND); \
	fi;
	if [ -f "$(STATLIB)" ]; then \
		echo "file is there: "; \
	else \
		echo "no, file is NOT there: "; \
		mkdir -p ./rust/target/release ; \
		echo "trying to symlink in $(rpolars_ext_binary)"; \
		ln -s $(rpolars_ext_binary) ./rust/target/release/libr_polars.a ; \
	fi

	if [ "${RPOLARS_CARGO_CLEAN_DEPS}" == "true" ]; then \
		echo "cleanup!!" ; \
		mv $(STATLIB) $(LIBDIR)/../temp_binary.a; \
		rm -rf $(LIBDIR); \
		mkdir $(LIBDIR); \
		mv $(LIBDIR)/../temp_binary.a $(STATLIB); \
		rm -rf ./src/.cargo; \
	else \
		echo "hands off!!" ; \
	fi


C_clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target
