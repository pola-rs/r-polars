name: Lint R

on:
  pull_request:
    paths:
      - "**/*.R"
      - air.toml
      - .github/workflows/lint-r.yml
  push:
    branches:
      - main
    paths:
      - "**/*.R"
      - air.toml
      - .github/workflows/lint-r.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  R_KEEP_PKG_SOURCE: yes
  NOT_CRAN: "true"
  LIB_SUMS_PATH: "tools/lib-sums.tsv"

jobs:
  air-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Air
        uses: posit-dev/setup-air@v1

      - name: Run air format
        run: air format --check .

  lintr-lint-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Check for pre-built binary
        run: |
          if [[ -f "${LIB_SUMS_PATH}" ]]; then
            echo "LIBR_POLARS_BUILD=false" >>"${GITHUB_ENV}"
          else
            echo "LIBR_POLARS_BUILD=true" >>"${GITHUB_ENV}"
          fi

      - name: more space for debug build
        if: env.LIBR_POLARS_BUILD == 'true'
        run: |
          du -hsc /usr/local/lib/*
          sudo rm -rf /usr/local/lib/android || true
          du -hsc /opt/hostedtoolcache/*
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          Ncpus: "2"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          needs: lint
          extra-packages: any::pkgload
          cache: always

      - id: rust-target
        if: env.LIBR_POLARS_BUILD == 'true'
        name: Set Rust target
        run: |
          echo "TARGET=$(rustc -vV | grep host | cut -d' ' -f2)" >>"$GITHUB_OUTPUT"

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2
        if: env.LIBR_POLARS_BUILD == 'true'
        with:
          workspaces: "src/rust -> target"
          shared-key: ${{ steps.rust-target.outputs.TARGET }}-debug-nightly

      - name: Build lib
        if: env.LIBR_POLARS_BUILD == 'true'
        env:
          LIBR_POLARS_FEATURES: nightly
        run: |
          # make sure savvy is built from source because rust-cache doesn't work well.
          (find ~/.cargo/registry/ src/rust/target -name 'savvy-*' -print0 | xargs -0 rm -rf) || true
          Rscript -e "pkgbuild::compile_dll(debug = TRUE)"

      - name: lintr version
        id: lintr-version
        run: |
          version=$(Rscript -e 'packageVersion("lintr") |> as.character() |> cat()')
          echo "version=$version" >>"$GITHUB_OUTPUT"

      - name: Cache lintr
        id: cache-lintr
        uses: actions/cache@v4
        with:
          path: .cache/R/lintr
          key: lintr-${{ steps.lintr-version.outputs.version }}

      - name: Run lint package
        shell: Rscript {0}
        env:
          LINTR_ERROR_ON_LINT: true
        run: |
          pkgload::load_all()
          library(testthat)
          lintr::lint_package(cache = TRUE)
