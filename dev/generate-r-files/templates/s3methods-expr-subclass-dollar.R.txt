#' @export
`$.{{class_name}}` <- function(x, name) {
  member_names <- ls(x, all.names = TRUE)
  method_names <- names({{env_name}})
  expr_method_names <- names(polars_expr__methods)

  if (name %in% member_names) {
    env_get(x, name)
  } else if (name %in% method_names) {
    fn <- {{env_name}}[[name]]
    self <- x # nolint: object_usage_linter
    environment(fn) <- environment()
    fn
  } else if (name %in% expr_method_names) {
    fn <- polars_expr__methods[[name]]
    self <- x # nolint: object_usage_linter
    environment(fn) <- environment()
    fn
  } else {
    NextMethod()
  }
}

#' @exportS3Method utils::.DollarNames
`.DollarNames.{{class_name}}` <- function(x, pattern = "") {
  member_names <- ls(x, all.names = TRUE)
  method_names <- names({{env_name}})
  expr_method_names <- names(polars_expr__methods)

  all_names <- union(member_names, method_names) |>
    union(expr_method_names)
  filtered_names <- findMatches(pattern, all_names)

  filtered_names[!startsWith(filtered_names, "_")]
}
